versions pytest-3.0.2, py-1.4.31, python-2.7.10.final.0
cwd=/Users/danvir/Masterbox/sideprojects/github/django-accounts
args=['tests/test_serializers.py', '--debug']

  pytest_cmdline_main [hook]
      config: <_pytest.config.Config object at 0x106c7ba10>
    pytest_plugin_registered [hook]
        manager: <_pytest.config.PytestPluginManager object at 0x106870190>
        plugin: <Session 'django-accounts'>
    finish pytest_plugin_registered --> [] [hook]
    pytest_configure [hook]
        config: <_pytest.config.Config object at 0x106c7ba10>
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x106870190>
          plugin: <_pytest.cacheprovider.LFPlugin instance at 0x1072e64d0>
      finish pytest_plugin_registered --> [] [hook]
    find_module called for: py._io.terminalwriter [assertion]
    find_module called for: py._io.termios [assertion]
    find_module called for: termios [assertion]
    find_module called for: py._io.fcntl [assertion]
    find_module called for: py._io.struct [assertion]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x106870190>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x106870190>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <_pytest.config.PytestPluginManager object at 0x106870190>}>
          plugin: <_pytest.config.PytestPluginManager object at 0x106870190>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x106870190>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x106870190>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <_pytest.config.Config object at 0x106c7ba10>}>
          plugin: <_pytest.config.Config object at 0x106c7ba10>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x106870190>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x106870190>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.mark' from '/Library/Python/2.7/site-packages/_pytest/mark.pyc'>}>
          plugin: <module '_pytest.mark' from '/Library/Python/2.7/site-packages/_pytest/mark.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x106870190>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x106870190>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.main' from '/Library/Python/2.7/site-packages/_pytest/main.pyc'>}>
          plugin: <module '_pytest.main' from '/Library/Python/2.7/site-packages/_pytest/main.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x106870190>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x106870190>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.terminal' from '/Library/Python/2.7/site-packages/_pytest/terminal.pyc'>}>
          plugin: <module '_pytest.terminal' from '/Library/Python/2.7/site-packages/_pytest/terminal.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x106870190>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x106870190>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.runner' from '/Library/Python/2.7/site-packages/_pytest/runner.pyc'>}>
          plugin: <module '_pytest.runner' from '/Library/Python/2.7/site-packages/_pytest/runner.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x106870190>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x106870190>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.python' from '/Library/Python/2.7/site-packages/_pytest/python.pyc'>}>
          plugin: <module '_pytest.python' from '/Library/Python/2.7/site-packages/_pytest/python.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x106870190>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x106870190>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.fixtures' from '/Library/Python/2.7/site-packages/_pytest/fixtures.pyc'>}>
          plugin: <module '_pytest.fixtures' from '/Library/Python/2.7/site-packages/_pytest/fixtures.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x106870190>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x106870190>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.debugging' from '/Library/Python/2.7/site-packages/_pytest/debugging.pyc'>}>
          plugin: <module '_pytest.debugging' from '/Library/Python/2.7/site-packages/_pytest/debugging.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x106870190>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x106870190>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.unittest' from '/Library/Python/2.7/site-packages/_pytest/unittest.pyc'>}>
          plugin: <module '_pytest.unittest' from '/Library/Python/2.7/site-packages/_pytest/unittest.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x106870190>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x106870190>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.capture' from '/Library/Python/2.7/site-packages/_pytest/capture.pyc'>}>
          plugin: <module '_pytest.capture' from '/Library/Python/2.7/site-packages/_pytest/capture.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x106870190>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x106870190>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.skipping' from '/Library/Python/2.7/site-packages/_pytest/skipping.pyc'>}>
          plugin: <module '_pytest.skipping' from '/Library/Python/2.7/site-packages/_pytest/skipping.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x106870190>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x106870190>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.tmpdir' from '/Library/Python/2.7/site-packages/_pytest/tmpdir.pyc'>}>
          plugin: <module '_pytest.tmpdir' from '/Library/Python/2.7/site-packages/_pytest/tmpdir.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x106870190>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x106870190>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.monkeypatch' from '/Library/Python/2.7/site-packages/_pytest/monkeypatch.pyc'>}>
          plugin: <module '_pytest.monkeypatch' from '/Library/Python/2.7/site-packages/_pytest/monkeypatch.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x106870190>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x106870190>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.recwarn' from '/Library/Python/2.7/site-packages/_pytest/recwarn.pyc'>}>
          plugin: <module '_pytest.recwarn' from '/Library/Python/2.7/site-packages/_pytest/recwarn.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x106870190>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x106870190>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.pastebin' from '/Library/Python/2.7/site-packages/_pytest/pastebin.pyc'>}>
          plugin: <module '_pytest.pastebin' from '/Library/Python/2.7/site-packages/_pytest/pastebin.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x106870190>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x106870190>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.helpconfig' from '/Library/Python/2.7/site-packages/_pytest/helpconfig.pyc'>}>
          plugin: <module '_pytest.helpconfig' from '/Library/Python/2.7/site-packages/_pytest/helpconfig.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x106870190>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x106870190>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.nose' from '/Library/Python/2.7/site-packages/_pytest/nose.pyc'>}>
          plugin: <module '_pytest.nose' from '/Library/Python/2.7/site-packages/_pytest/nose.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x106870190>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x106870190>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.assertion' from '/Library/Python/2.7/site-packages/_pytest/assertion/__init__.pyc'>}>
          plugin: <module '_pytest.assertion' from '/Library/Python/2.7/site-packages/_pytest/assertion/__init__.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x106870190>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x106870190>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.junitxml' from '/Library/Python/2.7/site-packages/_pytest/junitxml.pyc'>}>
          plugin: <module '_pytest.junitxml' from '/Library/Python/2.7/site-packages/_pytest/junitxml.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x106870190>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x106870190>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.resultlog' from '/Library/Python/2.7/site-packages/_pytest/resultlog.pyc'>}>
          plugin: <module '_pytest.resultlog' from '/Library/Python/2.7/site-packages/_pytest/resultlog.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x106870190>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x106870190>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.doctest' from '/Library/Python/2.7/site-packages/_pytest/doctest.pyc'>}>
          plugin: <module '_pytest.doctest' from '/Library/Python/2.7/site-packages/_pytest/doctest.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x106870190>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x106870190>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.cacheprovider' from '/Library/Python/2.7/site-packages/_pytest/cacheprovider.pyc'>}>
          plugin: <module '_pytest.cacheprovider' from '/Library/Python/2.7/site-packages/_pytest/cacheprovider.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x106870190>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x106870190>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.freeze_support' from '/Library/Python/2.7/site-packages/_pytest/freeze_support.pyc'>}>
          plugin: <module '_pytest.freeze_support' from '/Library/Python/2.7/site-packages/_pytest/freeze_support.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x106870190>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x106870190>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.setuponly' from '/Library/Python/2.7/site-packages/_pytest/setuponly.pyc'>}>
          plugin: <module '_pytest.setuponly' from '/Library/Python/2.7/site-packages/_pytest/setuponly.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x106870190>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x106870190>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.setupplan' from '/Library/Python/2.7/site-packages/_pytest/setupplan.pyc'>}>
          plugin: <module '_pytest.setupplan' from '/Library/Python/2.7/site-packages/_pytest/setupplan.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x106870190>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x106870190>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module 'pytest_cov.plugin' from '/Library/Python/2.7/site-packages/pytest_cov/plugin.py'>}>
          plugin: <module 'pytest_cov.plugin' from '/Library/Python/2.7/site-packages/pytest_cov/plugin.py'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x106870190>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x106870190>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module 'pytest_django.plugin' from '/Library/Python/2.7/site-packages/pytest_django/plugin.py'>}>
          plugin: <module 'pytest_django.plugin' from '/Library/Python/2.7/site-packages/pytest_django/plugin.py'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x106870190>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x106870190>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module 'xdist.boxed' from '/Library/Python/2.7/site-packages/xdist/boxed.pyc'>}>
          plugin: <module 'xdist.boxed' from '/Library/Python/2.7/site-packages/xdist/boxed.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x106870190>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x106870190>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module 'xdist.looponfail' from '/Library/Python/2.7/site-packages/xdist/looponfail.pyc'>}>
          plugin: <module 'xdist.looponfail' from '/Library/Python/2.7/site-packages/xdist/looponfail.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x106870190>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x106870190>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module 'xdist.plugin' from '/Library/Python/2.7/site-packages/xdist/plugin.pyc'>}>
          plugin: <module 'xdist.plugin' from '/Library/Python/2.7/site-packages/xdist/plugin.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x106870190>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x106870190>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <_pytest.capture.CaptureManager instance at 0x107203c68>}>
          plugin: <_pytest.capture.CaptureManager instance at 0x107203c68>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x106870190>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x106870190>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module 'conftest' from '/Users/danvir/Masterbox/sideprojects/github/django-accounts/conftest.py'>}>
          plugin: <module 'conftest' from '/Users/danvir/Masterbox/sideprojects/github/django-accounts/conftest.py'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x106870190>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x106870190>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <Session 'django-accounts'>}>
          plugin: <Session 'django-accounts'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x106870190>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x106870190>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <_pytest.cacheprovider.LFPlugin instance at 0x1072e64d0>}>
          plugin: <_pytest.cacheprovider.LFPlugin instance at 0x1072e64d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x106870190>
          plugin: <_pytest.terminal.TerminalReporter instance at 0x1072e6878>
      finish pytest_plugin_registered --> [] [hook]
    find_module called for: pytest_django.django [assertion]
    matched marked file 'pytest_django.django' (from 'pytest_django') [assertion]
    read only directory: '/Library/Python/2.7/site-packages/pytest_django' [assertion]
    rewriting '/Library/Python/2.7/site-packages/pytest_django/django.py' [assertion]
    find_module called for: django.apps [assertion]
    find_module called for: django.apps.config [assertion]
    find_module called for: django.apps.os [assertion]
    find_module called for: django.apps.importlib [assertion]
    find_module called for: django.apps.django [assertion]
    find_module called for: django.utils._os [assertion]
    find_module called for: django.utils.stat [assertion]
    find_module called for: django.utils.tempfile [assertion]
    find_module called for: django.utils.module_loading [assertion]
    find_module called for: django.apps.registry [assertion]
    find_module called for: django.apps.sys [assertion]
    find_module called for: django.apps.threading [assertion]
    find_module called for: django.apps.warnings [assertion]
    find_module called for: django.apps.collections [assertion]
    find_module called for: django.utils.log [assertion]
    find_module called for: django.utils.logging [assertion]
    find_module called for: logging [assertion]
    find_module called for: logging.sys [assertion]
    find_module called for: logging.os [assertion]
    find_module called for: logging.time [assertion]
    find_module called for: logging.cStringIO [assertion]
    find_module called for: logging.traceback [assertion]
    find_module called for: logging.warnings [assertion]
    find_module called for: logging.weakref [assertion]
    find_module called for: logging.collections [assertion]
    find_module called for: logging.codecs [assertion]
    find_module called for: logging.thread [assertion]
    find_module called for: logging.threading [assertion]
    find_module called for: logging.atexit [assertion]
    find_module called for: logging.config [assertion]
    find_module called for: logging.errno [assertion]
    find_module called for: logging.io [assertion]
    find_module called for: logging.logging [assertion]
    find_module called for: logging.handlers [assertion]
    find_module called for: logging.socket [assertion]
    find_module called for: logging.cPickle [assertion]
    find_module called for: logging.struct [assertion]
    find_module called for: logging.re [assertion]
    find_module called for: logging.stat [assertion]
    find_module called for: logging.types [assertion]
    find_module called for: logging.SocketServer [assertion]
    find_module called for: SocketServer [assertion]
    find_module called for: django.core.mail [assertion]
    find_module called for: django.core.mail.__future__ [assertion]
    find_module called for: django.core.mail.django [assertion]
    find_module called for: django.core.mail.utils [assertion]
    find_module called for: django.core.mail.socket [assertion]
    find_module called for: django.core.mail.message [assertion]
    find_module called for: django.core.mail.mimetypes [assertion]
    find_module called for: mimetypes [assertion]
    find_module called for: _winreg [assertion]
    find_module called for: django.core.mail.os [assertion]
    find_module called for: django.core.mail.random [assertion]
    find_module called for: django.core.mail.sys [assertion]
    find_module called for: django.core.mail.time [assertion]
    find_module called for: django.core.mail.email [assertion]
    find_module called for: email.generator [assertion]
    find_module called for: email.header [assertion]
    find_module called for: email.mime.base [assertion]
    find_module called for: email.mime.email [assertion]
    find_module called for: email.mime.message [assertion]
    find_module called for: email.mime.nonmultipart [assertion]
    find_module called for: email.mime.multipart [assertion]
    find_module called for: email.mime.text [assertion]
    find_module called for: django.views [assertion]
    find_module called for: django.views.debug [assertion]
    find_module called for: django.views.__future__ [assertion]
    find_module called for: django.views.os [assertion]
    find_module called for: django.views.re [assertion]
    find_module called for: django.views.sys [assertion]
    find_module called for: django.views.types [assertion]
    find_module called for: django.views.django [assertion]
    find_module called for: django.core.urlresolvers [assertion]
    find_module called for: django.core.__future__ [assertion]
    find_module called for: django.core.functools [assertion]
    find_module called for: django.core.re [assertion]
    find_module called for: django.core.warnings [assertion]
    find_module called for: django.core.importlib [assertion]
    find_module called for: django.core.threading [assertion]
    find_module called for: django.http [assertion]
    find_module called for: django.http.django [assertion]
    find_module called for: django.http.cookie [assertion]
    find_module called for: django.http.__future__ [assertion]
    find_module called for: django.http.sys [assertion]
    find_module called for: Cookie [assertion]
    find_module called for: django.http.request [assertion]
    find_module called for: django.http.copy [assertion]
    find_module called for: django.http.os [assertion]
    find_module called for: django.http.re [assertion]
    find_module called for: django.http.io [assertion]
    find_module called for: django.http.itertools [assertion]
    find_module called for: django.http.pprint [assertion]
    find_module called for: django.core.signing [assertion]
    find_module called for: django.core.base64 [assertion]
    find_module called for: django.core.datetime [assertion]
    find_module called for: django.core.json [assertion]
    find_module called for: django.core.time [assertion]
    find_module called for: django.core.zlib [assertion]
    find_module called for: django.utils.baseconv [assertion]
    find_module called for: django.utils.crypto [assertion]
    find_module called for: django.utils.binascii [assertion]
    find_module called for: django.utils.hashlib [assertion]
    find_module called for: django.utils.hmac [assertion]
    find_module called for: hmac [assertion]
    find_module called for: django.utils.random [assertion]
    find_module called for: django.utils.struct [assertion]
    find_module called for: django.utils.time [assertion]
    find_module called for: django.core.files [assertion]
    find_module called for: django.core.files.django [assertion]
    find_module called for: django.core.files.base [assertion]
    find_module called for: django.core.files.__future__ [assertion]
    find_module called for: django.core.files.os [assertion]
    find_module called for: django.core.files.io [assertion]
    find_module called for: django.core.files.utils [assertion]
    find_module called for: django.core.files.uploadhandler [assertion]
    find_module called for: django.core.files.uploadedfile [assertion]
    find_module called for: django.core.files.errno [assertion]
    find_module called for: django.core.files.temp [assertion]
    find_module called for: django.core.files.tempfile [assertion]
    find_module called for: django.http.multipartparser [assertion]
    find_module called for: django.http.base64 [assertion]
    find_module called for: django.http.binascii [assertion]
    find_module called for: django.http.cgi [assertion]
    find_module called for: cgi [assertion]
    find_module called for: mimetools [assertion]
    find_module called for: rfc822 [assertion]
    find_module called for: django.utils.datastructures [assertion]
    find_module called for: django.utils.text [assertion]
    find_module called for: django.utils.re [assertion]
    find_module called for: django.utils.unicodedata [assertion]
    find_module called for: unicodedata [assertion]
    find_module called for: django.utils.gzip [assertion]
    find_module called for: gzip [assertion]
    find_module called for: django.utils.io [assertion]
    find_module called for: django.utils.safestring [assertion]
    find_module called for: htmlentitydefs [assertion]
    find_module called for: django.utils.translation [assertion]
    find_module called for: django.utils.translation.__future__ [assertion]
    find_module called for: django.utils.translation.re [assertion]
    find_module called for: django.utils.translation.django [assertion]
    find_module called for: django.utils.decorators [assertion]
    find_module called for: django.utils.contextlib [assertion]
    find_module called for: django.http.response [assertion]
    find_module called for: django.http.datetime [assertion]
    find_module called for: django.http.json [assertion]
    find_module called for: django.http.time [assertion]
    find_module called for: django.http.email [assertion]
    find_module called for: django.core.signals [assertion]
    find_module called for: django.dispatch [assertion]
    find_module called for: django.dispatch.django [assertion]
    find_module called for: django.dispatch.dispatcher [assertion]
    find_module called for: django.dispatch.sys [assertion]
    find_module called for: django.dispatch.threading [assertion]
    find_module called for: django.dispatch.weakref [assertion]
    find_module called for: django.utils.inspect [assertion]
    find_module called for: django.dispatch.weakref_backports [assertion]
    find_module called for: django.core.serializers [assertion]
    find_module called for: django.core.serializers.importlib [assertion]
    find_module called for: django.core.serializers.django [assertion]
    find_module called for: django.core.serializers.base [assertion]
    find_module called for: django.core.serializers.warnings [assertion]
    find_module called for: django.db [assertion]
    find_module called for: django.db.django [assertion]
    find_module called for: django.db.utils [assertion]
    find_module called for: django.db.inspect [assertion]
    find_module called for: django.db.os [assertion]
    find_module called for: django.db.pkgutil [assertion]
    find_module called for: django.db.warnings [assertion]
    find_module called for: django.db.importlib [assertion]
    find_module called for: django.db.threading [assertion]
    find_module called for: django.db.models [assertion]
    find_module called for: django.db.models.functools [assertion]
    find_module called for: django.db.models.sys [assertion]
    find_module called for: django.db.models.warnings [assertion]
    find_module called for: django.db.models.django [assertion]
    find_module called for: django.db.models.query [assertion]
    find_module called for: django.db.models.copy [assertion]
    find_module called for: django.db.models.collections [assertion]
    find_module called for: django.db.transaction [assertion]
    find_module called for: django.db.models.sql [assertion]
    find_module called for: django.db.models.sql.django [assertion]
    find_module called for: django.db.models.sql.datastructures [assertion]
    find_module called for: django.db.models.sql.constants [assertion]
    find_module called for: django.db.models.sql.re [assertion]
    find_module called for: django.db.models.sql.subqueries [assertion]
    find_module called for: django.db.models.query_utils [assertion]
    find_module called for: django.db.models.__future__ [assertion]
    find_module called for: django.db.backends [assertion]
    find_module called for: django.db.backends.utils [assertion]
    find_module called for: django.db.backends.__future__ [assertion]
    find_module called for: django.db.backends.datetime [assertion]
    find_module called for: django.db.backends.decimal [assertion]
    find_module called for: django.db.backends.hashlib [assertion]
    find_module called for: django.db.backends.logging [assertion]
    find_module called for: django.db.backends.time [assertion]
    find_module called for: django.db.backends.django [assertion]
    find_module called for: django.utils.timezone [assertion]
    find_module called for: django.utils.pytz [assertion]
    find_module called for: pytz [assertion]
    find_module called for: pytz.sys [assertion]
    find_module called for: pytz.datetime [assertion]
    find_module called for: pytz.os [assertion]
    find_module called for: pytz.gettext [assertion]
    find_module called for: pytz.pkg_resources [assertion]
    find_module called for: pytz.pytz [assertion]
    find_module called for: pytz.exceptions [assertion]
    find_module called for: pytz.lazy [assertion]
    find_module called for: pytz.threading [assertion]
    find_module called for: pytz.UserDict [assertion]
    find_module called for: pytz.tzinfo [assertion]
    find_module called for: pytz.bisect [assertion]
    find_module called for: pytz.tzfile [assertion]
    find_module called for: pytz.cStringIO [assertion]
    find_module called for: pytz.struct [assertion]
    find_module called for: django.db.models.constants [assertion]
    find_module called for: django.utils.tree [assertion]
    find_module called for: django.db.models.sql.query [assertion]
    find_module called for: django.db.models.sql.copy [assertion]
    find_module called for: django.db.models.sql.warnings [assertion]
    find_module called for: django.db.models.sql.collections [assertion]
    find_module called for: django.db.models.sql.itertools [assertion]
    find_module called for: django.db.models.sql.string [assertion]
    find_module called for: django.db.models.aggregates [assertion]
    find_module called for: django.db.models.expressions [assertion]
    find_module called for: django.db.models.datetime [assertion]
    find_module called for: django.db.models.fields [assertion]
    find_module called for: django.db.models.fields.__future__ [assertion]
    find_module called for: django.db.models.fields.collections [assertion]
    find_module called for: django.db.models.fields.copy [assertion]
    find_module called for: django.db.models.fields.datetime [assertion]
    find_module called for: django.db.models.fields.decimal [assertion]
    find_module called for: django.db.models.fields.math [assertion]
    find_module called for: django.db.models.fields.uuid [assertion]
    find_module called for: uuid [assertion]
    find_module called for: ctypes [assertion]
    find_module called for: ctypes.os [assertion]
    find_module called for: ctypes.sys [assertion]
    find_module called for: ctypes._ctypes [assertion]
    find_module called for: _ctypes [assertion]
    find_module called for: ctypes.struct [assertion]
    find_module called for: ctypes.ctypes [assertion]
    find_module called for: ctypes._endian [assertion]
    find_module called for: ctypes.util [assertion]
    find_module called for: ctypes.macholib [assertion]
    find_module called for: ctypes.macholib.dyld [assertion]
    find_module called for: ctypes.macholib.os [assertion]
    find_module called for: ctypes.macholib.framework [assertion]
    find_module called for: ctypes.macholib.re [assertion]
    find_module called for: ctypes.macholib.dylib [assertion]
    find_module called for: ctypes.macholib.itertools [assertion]
    find_module called for: django.db.models.fields.warnings [assertion]
    find_module called for: django.db.models.fields.base64 [assertion]
    find_module called for: django.db.models.fields.itertools [assertion]
    find_module called for: django.db.models.fields.django [assertion]
    find_module called for: django.db.models.lookups [assertion]
    find_module called for: django.db.models.inspect [assertion]
    find_module called for: django.forms [assertion]
    find_module called for: django.forms.django [assertion]
    find_module called for: django.forms.fields [assertion]
    find_module called for: django.forms.__future__ [assertion]
    find_module called for: django.forms.copy [assertion]
    find_module called for: django.forms.datetime [assertion]
    find_module called for: django.forms.os [assertion]
    find_module called for: django.forms.re [assertion]
    find_module called for: django.forms.sys [assertion]
    find_module called for: django.forms.uuid [assertion]
    find_module called for: django.forms.warnings [assertion]
    find_module called for: django.forms.decimal [assertion]
    find_module called for: django.forms.io [assertion]
    find_module called for: django.core.validators [assertion]
    find_module called for: django.utils.deconstruct [assertion]
    find_module called for: django.utils.ipv6 [assertion]
    find_module called for: django.forms.utils [assertion]
    find_module called for: django.forms.json [assertion]
    find_module called for: django.utils.html [assertion]
    find_module called for: django.utils.http [assertion]
    find_module called for: django.utils.base64 [assertion]
    find_module called for: django.utils.calendar [assertion]
    find_module called for: django.utils.email [assertion]
    find_module called for: django.utils.html_parser [assertion]
    find_module called for: HTMLParser [assertion]
    find_module called for: markupbase [assertion]
    find_module called for: django.forms.collections [assertion]
    find_module called for: django.forms.UserList [assertion]
    find_module called for: UserList [assertion]
    find_module called for: django.forms.widgets [assertion]
    find_module called for: django.forms.itertools [assertion]
    find_module called for: django.utils.formats [assertion]
    find_module called for: django.utils.dateformat [assertion]
    find_module called for: django.utils.dates [assertion]
    find_module called for: django.utils.datetime_safe [assertion]
    find_module called for: django.utils.numberformat [assertion]
    find_module called for: django.utils.dateparse [assertion]
    find_module called for: django.utils.duration [assertion]
    find_module called for: django.forms.forms [assertion]
    find_module called for: django.forms.formsets [assertion]
    find_module called for: django.forms.models [assertion]
    find_module called for: django.core.checks [assertion]
    find_module called for: django.core.checks.__future__ [assertion]
    find_module called for: django.core.checks.messages [assertion]
    find_module called for: django.core.checks.django [assertion]
    find_module called for: django.core.checks.registry [assertion]
    find_module called for: django.core.checks.itertools [assertion]
    find_module called for: django.utils.itercompat [assertion]
    find_module called for: django.core.checks.compatibility [assertion]
    find_module called for: django.core.checks.compatibility.django_1_7_0 [assertion]
    find_module called for: django.core.checks.compatibility.__future__ [assertion]
    find_module called for: django.core.checks.compatibility.django_1_8_0 [assertion]
    find_module called for: django.core.checks.compatibility.django [assertion]
    find_module called for: django.core.checks.model_checks [assertion]
    find_module called for: django.core.checks.inspect [assertion]
    find_module called for: django.core.checks.types [assertion]
    find_module called for: django.core.checks.security [assertion]
    find_module called for: django.core.checks.security.base [assertion]
    find_module called for: django.core.checks.security.django [assertion]
    find_module called for: django.core.checks.security.csrf [assertion]
    find_module called for: django.core.checks.security.sessions [assertion]
    find_module called for: django.db.models.sql.where [assertion]
    find_module called for: django.db.models.sql.datetime [assertion]
    find_module called for: django.db.models.deletion [assertion]
    find_module called for: django.db.models.itertools [assertion]
    find_module called for: django.db.models.operator [assertion]
    find_module called for: django.db.models.signals [assertion]
    find_module called for: django.db.models.manager [assertion]
    find_module called for: django.db.models.importlib [assertion]
    find_module called for: django.db.models.base [assertion]
    find_module called for: django.db.models.fields.related [assertion]
    find_module called for: django.db.models.fields.operator [assertion]
    find_module called for: django.db.models.options [assertion]
    find_module called for: django.db.models.bisect [assertion]
    find_module called for: django.db.models.fields.proxy [assertion]
    find_module called for: django.db.models.fields.subclassing [assertion]
    find_module called for: django.db.models.fields.files [assertion]
    find_module called for: django.db.models.fields.os [assertion]
    find_module called for: django.core.files.images [assertion]
    find_module called for: django.core.files.zlib [assertion]
    find_module called for: django.core.files.storage [assertion]
    find_module called for: django.core.files.warnings [assertion]
    find_module called for: django.core.files.datetime [assertion]
    find_module called for: django.core.files.locks [assertion]
    find_module called for: django.core.files.fcntl [assertion]
    find_module called for: django.core.files.move [assertion]
    find_module called for: django.core.files.shutil [assertion]
    find_module called for: django.core.serializers.json [assertion]
    find_module called for: django.core.serializers.python [assertion]
    find_module called for: django.core.serializers.__future__ [assertion]
    find_module called for: django.http.utils [assertion]
    find_module called for: django.utils.regex_helper [assertion]
    find_module called for: django.template [assertion]
    find_module called for: django.template.engine [assertion]
    find_module called for: django.template.warnings [assertion]
    find_module called for: django.template.django [assertion]
    find_module called for: django.template.base [assertion]
    find_module called for: django.template.__future__ [assertion]
    find_module called for: django.template.inspect [assertion]
    find_module called for: django.template.re [assertion]
    find_module called for: django.template.functools [assertion]
    find_module called for: django.template.importlib [assertion]
    find_module called for: django.template.context [assertion]
    find_module called for: django.template.contextlib [assertion]
    find_module called for: django.template.copy [assertion]
    find_module called for: django.template.defaulttags [assertion]
    find_module called for: django.template.os [assertion]
    find_module called for: django.template.sys [assertion]
    find_module called for: django.template.datetime [assertion]
    find_module called for: django.template.itertools [assertion]
    find_module called for: django.template.defaultfilters [assertion]
    find_module called for: django.template.random [assertion]
    find_module called for: django.template.decimal [assertion]
    find_module called for: django.template.pprint [assertion]
    find_module called for: django.utils.timesince [assertion]
    find_module called for: django.template.smartif [assertion]
    find_module called for: django.utils.lorem_ipsum [assertion]
    find_module called for: django.template.loader_tags [assertion]
    find_module called for: django.template.collections [assertion]
    find_module called for: django.template.utils [assertion]
    find_module called for: django.contrib [assertion]
    find_module called for: django.contrib.auth [assertion]
    find_module called for: django.contrib.auth.inspect [assertion]
    find_module called for: django.contrib.auth.re [assertion]
    find_module called for: django.contrib.auth.django [assertion]
    find_module called for: django.middleware [assertion]
    find_module called for: django.middleware.csrf [assertion]
    find_module called for: django.middleware.__future__ [assertion]
    find_module called for: django.middleware.logging [assertion]
    find_module called for: django.middleware.re [assertion]
    find_module called for: django.middleware.django [assertion]
    find_module called for: django.utils.cache [assertion]
    find_module called for: django.core.cache [assertion]
    find_module called for: django.core.cache.threading [assertion]
    find_module called for: django.core.cache.warnings [assertion]
    find_module called for: django.core.cache.django [assertion]
    find_module called for: django.core.cache.backends [assertion]
    find_module called for: django.core.cache.backends.base [assertion]
    find_module called for: django.core.cache.backends.__future__ [assertion]
    find_module called for: django.core.cache.backends.time [assertion]
    find_module called for: django.core.cache.backends.warnings [assertion]
    find_module called for: django.core.cache.backends.django [assertion]
    find_module called for: django.contrib.auth.signals [assertion]
    find_module called for: django.contrib.auth.apps [assertion]
    find_module called for: django.contrib.auth.checks [assertion]
    find_module called for: django.contrib.auth.__future__ [assertion]
    find_module called for: django.contrib.auth.management [assertion]
    find_module called for: django.contrib.auth.management.__future__ [assertion]
    find_module called for: django.contrib.auth.management.getpass [assertion]
    find_module called for: getpass [assertion]
    find_module called for: django.contrib.auth.management.unicodedata [assertion]
    find_module called for: django.contrib.auth.management.django [assertion]
    find_module called for: django.core.management [assertion]
    find_module called for: django.core.management.__future__ [assertion]
    find_module called for: django.core.management.collections [assertion]
    find_module called for: django.core.management.importlib [assertion]
    find_module called for: django.core.management.os [assertion]
    find_module called for: django.core.management.pkgutil [assertion]
    find_module called for: django.core.management.sys [assertion]
    find_module called for: django.core.management.django [assertion]
    find_module called for: django.core.management.base [assertion]
    find_module called for: django.core.management.warnings [assertion]
    find_module called for: django.core.management.argparse [assertion]
    find_module called for: django.core.management.optparse [assertion]
    find_module called for: django.core.management.color [assertion]
    find_module called for: django.utils.termcolors [assertion]
    find_module called for: django.utils.autoreload [assertion]
    find_module called for: pyinotify [assertion]
    find_module called for: django.contrib.contenttypes [assertion]
    find_module called for: django.contrib.contenttypes.apps [assertion]
    find_module called for: django.contrib.contenttypes.django [assertion]
    find_module called for: django.contrib.contenttypes.checks [assertion]
    find_module called for: django.contrib.contenttypes.__future__ [assertion]
    find_module called for: django.contrib.contenttypes.management [assertion]
    find_module called for: django.contrib.sessions [assertion]
    find_module called for: django.contrib.sessions.apps [assertion]
    find_module called for: django.contrib.sessions.django [assertion]
    find_module called for: django.contrib.messages [assertion]
    find_module called for: django.contrib.messages.django [assertion]
    find_module called for: django.contrib.messages.api [assertion]
    find_module called for: django.contrib.messages.constants [assertion]
    find_module called for: django.contrib.messages.storage [assertion]
    find_module called for: django.contrib.messages.storage.django [assertion]
    find_module called for: django.contrib.messages.apps [assertion]
    find_module called for: django.contrib.staticfiles [assertion]
    find_module called for: django.contrib.staticfiles.apps [assertion]
    find_module called for: django.contrib.staticfiles.django [assertion]
    find_module called for: django.contrib.sites [assertion]
    find_module called for: django.contrib.sites.apps [assertion]
    find_module called for: django.contrib.sites.django [assertion]
    find_module called for: django.contrib.sites.management [assertion]
    find_module called for: rest_framework [assertion]
    find_module called for: rest_framework.authtoken [assertion]
    find_module called for: rest_framework.authtoken.apps [assertion]
    find_module called for: rest_framework.authtoken.django [assertion]
    find_module called for: allauth [assertion]
    find_module called for: allauth.account [assertion]
    find_module called for: allauth.account.app_settings [assertion]
    find_module called for: allauth.account.sys [assertion]
    find_module called for: allauth.account.django [assertion]
    find_module called for: allauth.account.apps [assertion]
    find_module called for: allauth.socialaccount [assertion]
    find_module called for: allauth.socialaccount.app_settings [assertion]
    find_module called for: allauth.socialaccount.sys [assertion]
    find_module called for: allauth.socialaccount.apps [assertion]
    find_module called for: allauth.socialaccount.django [assertion]
    find_module called for: django_accounts [assertion]
    find_module called for: django.contrib.auth.models [assertion]
    find_module called for: django.contrib.auth.models [assertion]
    find_module called for: django.contrib.auth.hashers [assertion]
    find_module called for: django.contrib.auth.base64 [assertion]
    find_module called for: django.contrib.auth.binascii [assertion]
    find_module called for: django.contrib.auth.hashlib [assertion]
    find_module called for: django.contrib.auth.importlib [assertion]
    find_module called for: django.contrib.auth.collections [assertion]
    find_module called for: django.contrib.contenttypes.models [assertion]
    find_module called for: django.contrib.contenttypes.warnings [assertion]
    find_module called for: django.db.backends.sqlite3 [assertion]
    find_module called for: django.db.backends.sqlite3.base [assertion]
    find_module called for: django.db.backends.sqlite3.__future__ [assertion]
    find_module called for: django.db.backends.sqlite3.datetime [assertion]
    find_module called for: django.db.backends.sqlite3.decimal [assertion]
    find_module called for: django.db.backends.sqlite3.re [assertion]
    find_module called for: django.db.backends.sqlite3.warnings [assertion]
    find_module called for: django.db.backends.sqlite3.django [assertion]
    find_module called for: django.db.backends.base [assertion]
    find_module called for: django.db.backends.base.base [assertion]
    find_module called for: django.db.backends.base.time [assertion]
    find_module called for: django.db.backends.base.warnings [assertion]
    find_module called for: django.db.backends.base.collections [assertion]
    find_module called for: django.db.backends.base.contextlib [assertion]
    find_module called for: django.db.backends.base.django [assertion]
    find_module called for: django.db.backends.signals [assertion]
    find_module called for: django.db.backends.base.validation [assertion]
    find_module called for: django.db.backends.sqlite3.pytz [assertion]
    find_module called for: django.db.backends.sqlite3.pysqlite2 [assertion]
    find_module called for: pysqlite2 [assertion]
    find_module called for: django.db.backends.sqlite3.sqlite3 [assertion]
    find_module called for: sqlite3 [assertion]
    find_module called for: sqlite3.dbapi2 [assertion]
    find_module called for: sqlite3.collections [assertion]
    find_module called for: sqlite3.datetime [assertion]
    find_module called for: sqlite3.time [assertion]
    find_module called for: sqlite3._sqlite3 [assertion]
    find_module called for: _sqlite3 [assertion]
    find_module called for: django.db.backends.sqlite3.client [assertion]
    find_module called for: django.db.backends.sqlite3.subprocess [assertion]
    find_module called for: django.db.backends.base.client [assertion]
    find_module called for: django.db.backends.sqlite3.creation [assertion]
    find_module called for: django.db.backends.sqlite3.os [assertion]
    find_module called for: django.db.backends.sqlite3.sys [assertion]
    find_module called for: django.db.backends.base.creation [assertion]
    find_module called for: django.db.backends.base.hashlib [assertion]
    find_module called for: django.db.backends.base.sys [assertion]
    find_module called for: django.db.backends.sqlite3.features [assertion]
    find_module called for: django.db.backends.base.features [assertion]
    find_module called for: django.db.backends.sqlite3.introspection [assertion]
    find_module called for: django.db.backends.base.introspection [assertion]
    find_module called for: django.db.backends.sqlite3.operations [assertion]
    find_module called for: django.db.backends.sqlite3.uuid [assertion]
    find_module called for: django.db.backends.base.operations [assertion]
    find_module called for: django.db.backends.base.datetime [assertion]
    find_module called for: django.db.backends.base.decimal [assertion]
    find_module called for: django.db.backends.base.importlib [assertion]
    find_module called for: django.db.backends.sqlite3.utils [assertion]
    find_module called for: django.db.backends.sqlite3.schema [assertion]
    find_module called for: django.db.backends.sqlite3.codecs [assertion]
    find_module called for: django.db.backends.sqlite3.copy [assertion]
    find_module called for: django.db.backends.base.schema [assertion]
    find_module called for: django.contrib.sessions.models [assertion]
    find_module called for: django.contrib.sessions.models [assertion]
    find_module called for: django.contrib.sessions.__future__ [assertion]
    find_module called for: django.contrib.sessions.backends [assertion]
    find_module called for: django.contrib.sessions.backends.db [assertion]
    find_module called for: django.contrib.sessions.backends.logging [assertion]
    find_module called for: django.contrib.sessions.backends.django [assertion]
    find_module called for: django.contrib.sessions.backends.base [assertion]
    find_module called for: django.contrib.sessions.backends.__future__ [assertion]
    find_module called for: django.contrib.sessions.backends.base64 [assertion]
    find_module called for: django.contrib.sessions.backends.string [assertion]
    find_module called for: django.contrib.sessions.backends.datetime [assertion]
    find_module called for: django.contrib.sessions.exceptions [assertion]
    find_module called for: django.contrib.messages.models [assertion]
    find_module called for: django.contrib.staticfiles.models [assertion]
    find_module called for: django.contrib.sites.models [assertion]
    find_module called for: django.contrib.sites.models [assertion]
    find_module called for: django.contrib.sites.__future__ [assertion]
    find_module called for: django.contrib.sites.string [assertion]
    find_module called for: django.contrib.sites.warnings [assertion]
    find_module called for: django.contrib.sites.requests [assertion]
    find_module called for: django.contrib.sites.shortcuts [assertion]
    find_module called for: rest_framework.models [assertion]
    find_module called for: rest_framework.models [assertion]
    find_module called for: rest_framework.authtoken.models [assertion]
    find_module called for: rest_framework.authtoken.models [assertion]
    find_module called for: rest_framework.authtoken.binascii [assertion]
    find_module called for: rest_framework.authtoken.os [assertion]
    find_module called for: allauth.models [assertion]
    find_module called for: allauth.models [assertion]
    find_module called for: allauth.account.models [assertion]
    find_module called for: allauth.account.models [assertion]
    find_module called for: allauth.account.__future__ [assertion]
    find_module called for: allauth.account.datetime [assertion]
    find_module called for: allauth.app_settings [assertion]
    find_module called for: allauth.django [assertion]
    find_module called for: allauth.account.signals [assertion]
    find_module called for: allauth.account.utils [assertion]
    find_module called for: allauth.account.allauth [assertion]
    find_module called for: allauth.compat [assertion]
    find_module called for: allauth.collections [assertion]
    find_module called for: django.template.loader [assertion]
    find_module called for: django.template.backends [assertion]
    find_module called for: django.template.backends.django [assertion]
    find_module called for: django.template.backends.base [assertion]
    find_module called for: django.template.loaders [assertion]
    find_module called for: django.template.loaders.base [assertion]
    find_module called for: django.template.loaders.django [assertion]
    find_module called for: allauth.urllib [assertion]
    find_module called for: allauth.urlparse [assertion]
    find_module called for: allauth.importlib [assertion]
    find_module called for: allauth.exceptions [assertion]
    find_module called for: allauth.utils [assertion]
    find_module called for: allauth.base64 [assertion]
    find_module called for: allauth.re [assertion]
    find_module called for: allauth.unicodedata [assertion]
    find_module called for: allauth.json [assertion]
    find_module called for: allauth.allauth [assertion]
    find_module called for: allauth.account.adapter [assertion]
    find_module called for: allauth.account.json [assertion]
    find_module called for: allauth.account.re [assertion]
    find_module called for: allauth.account.time [assertion]
    find_module called for: allauth.account.warnings [assertion]
    find_module called for: allauth.account.hashlib [assertion]
    find_module called for: allauth.account.managers [assertion]
    find_module called for: allauth.account.logging [assertion]
    find_module called for: allauth.socialaccount.models [assertion]
    find_module called for: allauth.socialaccount.models [assertion]
    find_module called for: allauth.socialaccount.providers [assertion]
    find_module called for: allauth.socialaccount.providers.django [assertion]
    find_module called for: allauth.socialaccount.providers.allauth [assertion]
    find_module called for: allauth.socialaccount.fields [assertion]
    find_module called for: allauth.socialaccount.json [assertion]
    find_module called for: allauth.socialaccount.south [assertion]
    find_module called for: south [assertion]
    find_module called for: django_accounts.models [assertion]
    find_module called for: django_accounts.models [assertion]
    find_module called for: django_accounts.logging [assertion]
    find_module called for: django_accounts.django [assertion]
    find_module called for: django_accounts.rest_framework [assertion]
    find_module called for: tests.models [assertion]
    find_module called for: tests.models [assertion]
    find_module called for: pytest_django.compat [assertion]
    matched marked file 'pytest_django.compat' (from 'pytest_django') [assertion]
    read only directory: '/Library/Python/2.7/site-packages/pytest_django' [assertion]
    rewriting '/Library/Python/2.7/site-packages/pytest_django/compat.py' [assertion]
    find_module called for: django.test [assertion]
    find_module called for: django.test.django [assertion]
    find_module called for: django.test.client [assertion]
    find_module called for: django.test.__future__ [assertion]
    find_module called for: django.test.mimetypes [assertion]
    find_module called for: django.test.os [assertion]
    find_module called for: django.test.re [assertion]
    find_module called for: django.test.sys [assertion]
    find_module called for: django.test.copy [assertion]
    find_module called for: django.test.importlib [assertion]
    find_module called for: django.test.io [assertion]
    find_module called for: django.core.handlers [assertion]
    find_module called for: django.core.handlers.base [assertion]
    find_module called for: django.core.handlers.__future__ [assertion]
    find_module called for: django.core.handlers.logging [assertion]
    find_module called for: django.core.handlers.sys [assertion]
    find_module called for: django.core.handlers.types [assertion]
    find_module called for: django.core.handlers.django [assertion]
    find_module called for: django.core.handlers.wsgi [assertion]
    find_module called for: django.core.handlers.cgi [assertion]
    find_module called for: django.core.handlers.codecs [assertion]
    find_module called for: django.core.handlers.warnings [assertion]
    find_module called for: django.core.handlers.io [assertion]
    find_module called for: django.core.handlers.threading [assertion]
    find_module called for: django.test.signals [assertion]
    find_module called for: django.test.threading [assertion]
    find_module called for: django.test.time [assertion]
    find_module called for: django.test.warnings [assertion]
    find_module called for: django.test.utils [assertion]
    find_module called for: django.test.logging [assertion]
    find_module called for: django.test.contextlib [assertion]
    find_module called for: django.test.functools [assertion]
    find_module called for: django.test.unittest [assertion]
    find_module called for: unittest [assertion]
    find_module called for: unittest.result [assertion]
    find_module called for: unittest.os [assertion]
    find_module called for: unittest.sys [assertion]
    find_module called for: unittest.traceback [assertion]
    find_module called for: unittest.StringIO [assertion]
    find_module called for: unittest.util [assertion]
    find_module called for: unittest.collections [assertion]
    find_module called for: unittest.functools [assertion]
    find_module called for: unittest.case [assertion]
    find_module called for: unittest.difflib [assertion]
    find_module called for: difflib [assertion]
    find_module called for: unittest.pprint [assertion]
    find_module called for: unittest.re [assertion]
    find_module called for: unittest.types [assertion]
    find_module called for: unittest.warnings [assertion]
    find_module called for: unittest.suite [assertion]
    find_module called for: unittest.loader [assertion]
    find_module called for: unittest.fnmatch [assertion]
    find_module called for: unittest.main [assertion]
    find_module called for: unittest.runner [assertion]
    find_module called for: unittest.time [assertion]
    find_module called for: unittest.signals [assertion]
    find_module called for: unittest.signal [assertion]
    find_module called for: unittest.weakref [assertion]
    find_module called for: django.test.xml [assertion]
    find_module called for: django.template.loaders.locmem [assertion]
    find_module called for: django.test.jinja2 [assertion]
    find_module called for: jinja2 [assertion]
    find_module called for: jinja2.jinja2 [assertion]
    find_module called for: jinja2.environment [assertion]
    find_module called for: jinja2.os [assertion]
    find_module called for: jinja2.sys [assertion]
    find_module called for: jinja2.nodes [assertion]
    find_module called for: jinja2.types [assertion]
    find_module called for: jinja2.operator [assertion]
    find_module called for: jinja2.collections [assertion]
    find_module called for: jinja2.utils [assertion]
    find_module called for: jinja2.re [assertion]
    find_module called for: jinja2.errno [assertion]
    find_module called for: jinja2.threading [assertion]
    find_module called for: jinja2._compat [assertion]
    find_module called for: jinja2.cPickle [assertion]
    find_module called for: jinja2.cStringIO [assertion]
    find_module called for: jinja2.itertools [assertion]
    find_module called for: jinja2.urllib [assertion]
    find_module called for: jinja2.markupsafe [assertion]
    find_module called for: markupsafe [assertion]
    find_module called for: markupsafe.re [assertion]
    find_module called for: markupsafe.string [assertion]
    find_module called for: markupsafe.collections [assertion]
    find_module called for: markupsafe.markupsafe [assertion]
    find_module called for: markupsafe._compat [assertion]
    find_module called for: markupsafe.sys [assertion]
    find_module called for: markupsafe._speedups [assertion]
    find_module called for: jinja2.defaults [assertion]
    find_module called for: jinja2.filters [assertion]
    find_module called for: jinja2.math [assertion]
    find_module called for: jinja2.random [assertion]
    find_module called for: jinja2.runtime [assertion]
    find_module called for: jinja2.exceptions [assertion]
    find_module called for: jinja2.tests [assertion]
    find_module called for: jinja2.decimal [assertion]
    find_module called for: jinja2.lexer [assertion]
    find_module called for: jinja2.parser [assertion]
    find_module called for: jinja2.optimizer [assertion]
    find_module called for: jinja2.visitor [assertion]
    find_module called for: jinja2.compiler [assertion]
    find_module called for: jinja2.copy [assertion]
    find_module called for: jinja2.keyword [assertion]
    find_module called for: jinja2.functools [assertion]
    find_module called for: jinja2.loaders [assertion]
    find_module called for: jinja2.weakref [assertion]
    find_module called for: jinja2.hashlib [assertion]
    find_module called for: jinja2.bccache [assertion]
    find_module called for: jinja2.stat [assertion]
    find_module called for: jinja2.marshal [assertion]
    find_module called for: jinja2.tempfile [assertion]
    find_module called for: jinja2.fnmatch [assertion]
    find_module called for: django.test.testcases [assertion]
    find_module called for: django.test.difflib [assertion]
    find_module called for: django.test.errno [assertion]
    find_module called for: django.test.json [assertion]
    find_module called for: django.test.posixpath [assertion]
    find_module called for: django.test.socket [assertion]
    find_module called for: django.test.collections [assertion]
    find_module called for: django.core.management.commands [assertion]
    find_module called for: django.core.management.commands.flush [assertion]
    find_module called for: django.core.management.commands.__future__ [assertion]
    find_module called for: django.core.management.commands.sys [assertion]
    find_module called for: django.core.management.commands.importlib [assertion]
    find_module called for: django.core.management.commands.django [assertion]
    find_module called for: django.core.management.sql [assertion]
    find_module called for: django.core.management.io [assertion]
    find_module called for: django.core.management.re [assertion]
    find_module called for: django.core.servers [assertion]
    find_module called for: django.core.servers.basehttp [assertion]
    find_module called for: django.core.servers.__future__ [assertion]
    find_module called for: django.core.servers.socket [assertion]
    find_module called for: django.core.servers.sys [assertion]
    find_module called for: django.core.servers.wsgiref [assertion]
    find_module called for: wsgiref [assertion]
    find_module called for: wsgiref.simple_server [assertion]
    find_module called for: wsgiref.BaseHTTPServer [assertion]
    find_module called for: BaseHTTPServer [assertion]
    find_module called for: wsgiref.urllib [assertion]
    find_module called for: wsgiref.sys [assertion]
    find_module called for: wsgiref.wsgiref [assertion]
    find_module called for: wsgiref.handlers [assertion]
    find_module called for: wsgiref.types [assertion]
    find_module called for: wsgiref.util [assertion]
    find_module called for: wsgiref.posixpath [assertion]
    find_module called for: wsgiref.headers [assertion]
    find_module called for: wsgiref.re [assertion]
    find_module called for: wsgiref.os [assertion]
    find_module called for: wsgiref.time [assertion]
    find_module called for: django.core.servers.django [assertion]
    find_module called for: django.core.wsgi [assertion]
    find_module called for: django.test.html [assertion]
    find_module called for: django.utils.six.moves.urllib.request [assertion]
    find_module called for: django.views.static [assertion]
    find_module called for: django.views.mimetypes [assertion]
    find_module called for: django.views.posixpath [assertion]
    find_module called for: django.views.stat [assertion]
    find_module called for: unittest.mock [assertion]
    find_module called for: django.test.mock [assertion]
    find_module called for: mock [assertion]
    find_module called for: mock.mock [assertion]
    find_module called for: builtins [assertion]
    find_module called for: future [assertion]
    find_module called for: future.builtins [assertion]
    find_module called for: future.builtins.future [assertion]
    find_module called for: future.builtins.iterators [assertion]
    find_module called for: future.utils [assertion]
    find_module called for: future.utils.types [assertion]
    find_module called for: future.utils.sys [assertion]
    find_module called for: future.utils.numbers [assertion]
    find_module called for: future.utils.functools [assertion]
    find_module called for: future.utils.copy [assertion]
    find_module called for: future.utils.inspect [assertion]
    find_module called for: future.utils.__builtin__ [assertion]
    find_module called for: future.types [assertion]
    find_module called for: future.types.newbytes [assertion]
    find_module called for: future.types.collections [assertion]
    find_module called for: future.types.numbers [assertion]
    find_module called for: future.types.string [assertion]
    find_module called for: future.types.future [assertion]
    find_module called for: future.types.newobject [assertion]
    find_module called for: future.types.sys [assertion]
    find_module called for: future.types.newdict [assertion]
    find_module called for: future.types.newint [assertion]
    find_module called for: future.types.__future__ [assertion]
    find_module called for: future.types.struct [assertion]
    find_module called for: future.types.newlist [assertion]
    find_module called for: future.types.copy [assertion]
    find_module called for: future.types.newrange [assertion]
    find_module called for: future.backports [assertion]
    find_module called for: future.standard_library [assertion]
    find_module called for: future.backports.misc [assertion]
    find_module called for: future.types.newstr [assertion]
    find_module called for: future.builtins.misc [assertion]
    find_module called for: future.builtins.io [assertion]
    find_module called for: future.builtins.future_builtins [assertion]
    find_module called for: future_builtins [assertion]
    find_module called for: future.builtins.__builtin__ [assertion]
    find_module called for: future.builtins.newnext [assertion]
    find_module called for: future.builtins.newround [assertion]
    find_module called for: future.builtins.decimal [assertion]
    find_module called for: future.builtins.newsuper [assertion]
    find_module called for: six [assertion]
    find_module called for: pbr [assertion]
    find_module called for: pbr.version [assertion]
    find_module called for: pbr.itertools [assertion]
    find_module called for: pbr.operator [assertion]
    find_module called for: pbr.sys [assertion]
    find_module called for: pbr.pkg_resources [assertion]
    find_module called for: funcsigs [assertion]
    find_module called for: funcsigs.version [assertion]
    find_module called for: django.test.runner [assertion]
    finish pytest_configure --> [] [hook]
    pytest_sessionstart [hook]
        session: <Session 'django-accounts'>
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x106870190>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x106870190>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <_pytest.config.PytestPluginManager object at 0x106870190>}>
          plugin: <_pytest.config.PytestPluginManager object at 0x106870190>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x106870190>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x106870190>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <_pytest.config.Config object at 0x106c7ba10>}>
          plugin: <_pytest.config.Config object at 0x106c7ba10>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x106870190>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x106870190>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.mark' from '/Library/Python/2.7/site-packages/_pytest/mark.pyc'>}>
          plugin: <module '_pytest.mark' from '/Library/Python/2.7/site-packages/_pytest/mark.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x106870190>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x106870190>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.main' from '/Library/Python/2.7/site-packages/_pytest/main.pyc'>}>
          plugin: <module '_pytest.main' from '/Library/Python/2.7/site-packages/_pytest/main.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x106870190>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x106870190>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.terminal' from '/Library/Python/2.7/site-packages/_pytest/terminal.pyc'>}>
          plugin: <module '_pytest.terminal' from '/Library/Python/2.7/site-packages/_pytest/terminal.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x106870190>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x106870190>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.runner' from '/Library/Python/2.7/site-packages/_pytest/runner.pyc'>}>
          plugin: <module '_pytest.runner' from '/Library/Python/2.7/site-packages/_pytest/runner.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x106870190>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x106870190>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.python' from '/Library/Python/2.7/site-packages/_pytest/python.pyc'>}>
          plugin: <module '_pytest.python' from '/Library/Python/2.7/site-packages/_pytest/python.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x106870190>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x106870190>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.fixtures' from '/Library/Python/2.7/site-packages/_pytest/fixtures.pyc'>}>
          plugin: <module '_pytest.fixtures' from '/Library/Python/2.7/site-packages/_pytest/fixtures.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x106870190>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x106870190>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.debugging' from '/Library/Python/2.7/site-packages/_pytest/debugging.pyc'>}>
          plugin: <module '_pytest.debugging' from '/Library/Python/2.7/site-packages/_pytest/debugging.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x106870190>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x106870190>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.unittest' from '/Library/Python/2.7/site-packages/_pytest/unittest.pyc'>}>
          plugin: <module '_pytest.unittest' from '/Library/Python/2.7/site-packages/_pytest/unittest.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x106870190>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x106870190>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.capture' from '/Library/Python/2.7/site-packages/_pytest/capture.pyc'>}>
          plugin: <module '_pytest.capture' from '/Library/Python/2.7/site-packages/_pytest/capture.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x106870190>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x106870190>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.skipping' from '/Library/Python/2.7/site-packages/_pytest/skipping.pyc'>}>
          plugin: <module '_pytest.skipping' from '/Library/Python/2.7/site-packages/_pytest/skipping.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x106870190>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x106870190>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.tmpdir' from '/Library/Python/2.7/site-packages/_pytest/tmpdir.pyc'>}>
          plugin: <module '_pytest.tmpdir' from '/Library/Python/2.7/site-packages/_pytest/tmpdir.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x106870190>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x106870190>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.monkeypatch' from '/Library/Python/2.7/site-packages/_pytest/monkeypatch.pyc'>}>
          plugin: <module '_pytest.monkeypatch' from '/Library/Python/2.7/site-packages/_pytest/monkeypatch.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x106870190>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x106870190>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.recwarn' from '/Library/Python/2.7/site-packages/_pytest/recwarn.pyc'>}>
          plugin: <module '_pytest.recwarn' from '/Library/Python/2.7/site-packages/_pytest/recwarn.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x106870190>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x106870190>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.pastebin' from '/Library/Python/2.7/site-packages/_pytest/pastebin.pyc'>}>
          plugin: <module '_pytest.pastebin' from '/Library/Python/2.7/site-packages/_pytest/pastebin.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x106870190>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x106870190>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.helpconfig' from '/Library/Python/2.7/site-packages/_pytest/helpconfig.pyc'>}>
          plugin: <module '_pytest.helpconfig' from '/Library/Python/2.7/site-packages/_pytest/helpconfig.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x106870190>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x106870190>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.nose' from '/Library/Python/2.7/site-packages/_pytest/nose.pyc'>}>
          plugin: <module '_pytest.nose' from '/Library/Python/2.7/site-packages/_pytest/nose.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x106870190>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x106870190>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.assertion' from '/Library/Python/2.7/site-packages/_pytest/assertion/__init__.pyc'>}>
          plugin: <module '_pytest.assertion' from '/Library/Python/2.7/site-packages/_pytest/assertion/__init__.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x106870190>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x106870190>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.junitxml' from '/Library/Python/2.7/site-packages/_pytest/junitxml.pyc'>}>
          plugin: <module '_pytest.junitxml' from '/Library/Python/2.7/site-packages/_pytest/junitxml.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x106870190>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x106870190>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.resultlog' from '/Library/Python/2.7/site-packages/_pytest/resultlog.pyc'>}>
          plugin: <module '_pytest.resultlog' from '/Library/Python/2.7/site-packages/_pytest/resultlog.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x106870190>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x106870190>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.doctest' from '/Library/Python/2.7/site-packages/_pytest/doctest.pyc'>}>
          plugin: <module '_pytest.doctest' from '/Library/Python/2.7/site-packages/_pytest/doctest.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x106870190>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x106870190>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.cacheprovider' from '/Library/Python/2.7/site-packages/_pytest/cacheprovider.pyc'>}>
          plugin: <module '_pytest.cacheprovider' from '/Library/Python/2.7/site-packages/_pytest/cacheprovider.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x106870190>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x106870190>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.freeze_support' from '/Library/Python/2.7/site-packages/_pytest/freeze_support.pyc'>}>
          plugin: <module '_pytest.freeze_support' from '/Library/Python/2.7/site-packages/_pytest/freeze_support.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x106870190>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x106870190>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.setuponly' from '/Library/Python/2.7/site-packages/_pytest/setuponly.pyc'>}>
          plugin: <module '_pytest.setuponly' from '/Library/Python/2.7/site-packages/_pytest/setuponly.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x106870190>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x106870190>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module '_pytest.setupplan' from '/Library/Python/2.7/site-packages/_pytest/setupplan.pyc'>}>
          plugin: <module '_pytest.setupplan' from '/Library/Python/2.7/site-packages/_pytest/setupplan.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x106870190>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x106870190>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module 'pytest_cov.plugin' from '/Library/Python/2.7/site-packages/pytest_cov/plugin.py'>}>
          plugin: <module 'pytest_cov.plugin' from '/Library/Python/2.7/site-packages/pytest_cov/plugin.py'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x106870190>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x106870190>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module 'pytest_django.plugin' from '/Library/Python/2.7/site-packages/pytest_django/plugin.py'>}>
          plugin: <module 'pytest_django.plugin' from '/Library/Python/2.7/site-packages/pytest_django/plugin.py'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x106870190>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x106870190>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module 'xdist.boxed' from '/Library/Python/2.7/site-packages/xdist/boxed.pyc'>}>
          plugin: <module 'xdist.boxed' from '/Library/Python/2.7/site-packages/xdist/boxed.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x106870190>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x106870190>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module 'xdist.looponfail' from '/Library/Python/2.7/site-packages/xdist/looponfail.pyc'>}>
          plugin: <module 'xdist.looponfail' from '/Library/Python/2.7/site-packages/xdist/looponfail.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x106870190>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x106870190>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module 'xdist.plugin' from '/Library/Python/2.7/site-packages/xdist/plugin.pyc'>}>
          plugin: <module 'xdist.plugin' from '/Library/Python/2.7/site-packages/xdist/plugin.pyc'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x106870190>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x106870190>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <_pytest.capture.CaptureManager instance at 0x107203c68>}>
          plugin: <_pytest.capture.CaptureManager instance at 0x107203c68>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x106870190>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x106870190>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <module 'conftest' from '/Users/danvir/Masterbox/sideprojects/github/django-accounts/conftest.py'>}>
          plugin: <module 'conftest' from '/Users/danvir/Masterbox/sideprojects/github/django-accounts/conftest.py'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x106870190>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x106870190>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <Session 'django-accounts'>}>
          plugin: <Session 'django-accounts'>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x106870190>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x106870190>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <_pytest.cacheprovider.LFPlugin instance at 0x1072e64d0>}>
          plugin: <_pytest.cacheprovider.LFPlugin instance at 0x1072e64d0>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x106870190>
          __multicall__: <_MultiCall 0 results, 0 meths, kwargs={'manager': <_pytest.config.PytestPluginManager object at 0x106870190>, '__multicall__': <_MultiCall 0 results, 0 meths, kwargs={...}>, 'plugin': <_pytest.terminal.TerminalReporter instance at 0x1072e6878>}>
          plugin: <_pytest.terminal.TerminalReporter instance at 0x1072e6878>
      finish pytest_plugin_registered --> [] [hook]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x106870190>
          plugin: <_pytest.fixtures.FixtureManager instance at 0x107fc4998>
      finish pytest_plugin_registered --> [] [hook]
      pytest_report_header [hook]
          startdir: /Users/danvir/Masterbox/sideprojects/github/django-accounts
          config: <_pytest.config.Config object at 0x106c7ba10>
      finish pytest_report_header --> [['rootdir: /Users/danvir/Masterbox/sideprojects/github/django-accounts, inifile: ', 'plugins: cov-2.4.0, django-3.0.0, xdist-1.15.0'], ['using: pytest-3.0.2 pylib-1.4.31', 'setuptools registered plugins:', '  pytest-cov-2.4.0 at /Library/Python/2.7/site-packages/pytest_cov/plugin.py', '  pytest-django-3.0.0 at /Library/Python/2.7/site-packages/pytest_django/plugin.py', '  pytest-xdist-1.15.0 at /Library/Python/2.7/site-packages/xdist/boxed.pyc', '  pytest-xdist-1.15.0 at /Library/Python/2.7/site-packages/xdist/looponfail.pyc', '  pytest-xdist-1.15.0 at /Library/Python/2.7/site-packages/xdist/plugin.pyc']] [hook]
    finish pytest_sessionstart --> [] [hook]
    pytest_collection [hook]
        session: <Session 'django-accounts'>
    perform_collect <Session 'django-accounts'> ['tests/test_serializers.py'] [collection]
        pytest_collectstart [hook]
            collector: <Session 'django-accounts'>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Session 'django-accounts'>
        processing argument /Users/danvir/Masterbox/sideprojects/github/django-accounts/tests/test_serializers.py [collection]
            pytest_collect_file [hook]
                path: /Users/danvir/Masterbox/sideprojects/github/django-accounts/tests/test_serializers.py
                parent: <Session 'django-accounts'>
              pytest_pycollect_makemodule [hook]
                  path: /Users/danvir/Masterbox/sideprojects/github/django-accounts/tests/test_serializers.py
                  parent: <Session 'django-accounts'>
              finish pytest_pycollect_makemodule --> <Module 'tests/test_serializers.py'> [hook]
            finish pytest_collect_file --> [<Module 'tests/test_serializers.py'>] [hook]
          matchnodes [<Module 'tests/test_serializers.py'>] [] [collection]
            matchnodes finished ->  1 nodes [collection]
        finish pytest_make_collect_report --> <CollectReport '' lenresult=1 outcome='passed'> [hook]
        pytest_collectreport [hook]
            report: <CollectReport '' lenresult=1 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
    genitems <Module 'tests/test_serializers.py'> [collection]
      pytest_collectstart [hook]
          collector: <Module 'tests/test_serializers.py'>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module 'tests/test_serializers.py'>
      find_module called for: tests.test_serializers [assertion]
      matched test file (was specified on cmdline): '/Users/danvir/Masterbox/sideprojects/github/django-accounts/tests/test_serializers.py' [assertion]
      found cached rewritten pyc for '/Users/danvir/Masterbox/sideprojects/github/django-accounts/tests/test_serializers.py' [assertion]
      find_module called for: tests.__builtin__ [assertion]
      find_module called for: tests._pytest [assertion]
      find_module called for: tests.django_accounts [assertion]
      find_module called for: django_accounts.serializers [assertion]
      find_module called for: django.contrib.auth.forms [assertion]
      find_module called for: django.contrib.auth.tokens [assertion]
      find_module called for: django.contrib.auth.datetime [assertion]
      find_module called for: rest_framework.serializers [assertion]
      find_module called for: rest_framework.__future__ [assertion]
      find_module called for: rest_framework.traceback [assertion]
      find_module called for: rest_framework.warnings [assertion]
      find_module called for: rest_framework.django [assertion]
      find_module called for: rest_framework.rest_framework [assertion]
      find_module called for: rest_framework.compat [assertion]
      find_module called for: rest_framework.inspect [assertion]
      find_module called for: django.views.generic [assertion]
      find_module called for: django.views.generic.django [assertion]
      find_module called for: django.views.generic.base [assertion]
      find_module called for: django.views.generic.__future__ [assertion]
      find_module called for: django.views.generic.logging [assertion]
      find_module called for: django.views.generic.warnings [assertion]
      find_module called for: django.views.generic.functools [assertion]
      find_module called for: django.template.response [assertion]
      find_module called for: django.views.generic.dates [assertion]
      find_module called for: django.views.generic.datetime [assertion]
      find_module called for: django.views.generic.detail [assertion]
      find_module called for: django.views.generic.list [assertion]
      find_module called for: django.core.paginator [assertion]
      find_module called for: django.core.collections [assertion]
      find_module called for: django.core.math [assertion]
      find_module called for: django.views.generic.edit [assertion]
      find_module called for: django.views.generic.inspect [assertion]
      find_module called for: django.views.generic.re [assertion]
      find_module called for: rest_framework.importlib [assertion]
      find_module called for: rest_framework.urlparse [assertion]
      find_module called for: django.contrib.postgres [assertion]
      find_module called for: django.contrib.postgres.fields [assertion]
      find_module called for: django.contrib.postgres.fields.array [assertion]
      find_module called for: django.contrib.postgres.fields.json [assertion]
      find_module called for: django.contrib.postgres.fields.django [assertion]
      find_module called for: django.contrib.postgres.lookups [assertion]
      find_module called for: django.contrib.postgres.django [assertion]
      find_module called for: django.contrib.postgres.forms [assertion]
      find_module called for: django.contrib.postgres.forms.array [assertion]
      find_module called for: django.contrib.postgres.forms.copy [assertion]
      find_module called for: django.contrib.postgres.forms.django [assertion]
      find_module called for: django.contrib.postgres.validators [assertion]
      find_module called for: django.contrib.postgres.copy [assertion]
      find_module called for: django.contrib.postgres.forms.hstore [assertion]
      find_module called for: django.contrib.postgres.forms.json [assertion]
      find_module called for: django.contrib.postgres.forms.ranges [assertion]
      find_module called for: django.contrib.postgres.forms.psycopg2 [assertion]
      find_module called for: psycopg2 [assertion]
      find_module called for: django.contrib.postgres.fields [assertion]
      find_module called for: django.contrib.postgres.fields.array [assertion]
      find_module called for: django.contrib.postgres.forms [assertion]
      find_module called for: django.contrib.postgres.forms.ranges [assertion]
      find_module called for: django.contrib.postgres.forms.psycopg2 [assertion]
      find_module called for: psycopg2 [assertion]
      find_module called for: rest_framework.django_filters [assertion]
      find_module called for: django_filters [assertion]
      find_module called for: rest_framework.crispy_forms [assertion]
      find_module called for: crispy_forms [assertion]
      find_module called for: rest_framework.coreapi [assertion]
      find_module called for: coreapi [assertion]
      find_module called for: rest_framework.markdown [assertion]
      find_module called for: markdown [assertion]
      find_module called for: rest_framework.utils [assertion]
      find_module called for: rest_framework.utils.model_meta [assertion]
      find_module called for: rest_framework.utils.collections [assertion]
      find_module called for: rest_framework.utils.rest_framework [assertion]
      find_module called for: rest_framework.utils.field_mapping [assertion]
      find_module called for: rest_framework.utils.inspect [assertion]
      find_module called for: rest_framework.utils.django [assertion]
      find_module called for: rest_framework.validators [assertion]
      find_module called for: rest_framework.exceptions [assertion]
      find_module called for: rest_framework.math [assertion]
      find_module called for: rest_framework.status [assertion]
      find_module called for: rest_framework.utils.serializer_helpers [assertion]
      find_module called for: rest_framework.utils.__future__ [assertion]
      find_module called for: rest_framework.utils.representation [assertion]
      find_module called for: rest_framework.utils.re [assertion]
      find_module called for: rest_framework.fields [assertion]
      find_module called for: rest_framework.collections [assertion]
      find_module called for: rest_framework.copy [assertion]
      find_module called for: rest_framework.datetime [assertion]
      find_module called for: rest_framework.decimal [assertion]
      find_module called for: rest_framework.json [assertion]
      find_module called for: rest_framework.re [assertion]
      find_module called for: rest_framework.uuid [assertion]
      find_module called for: rest_framework.settings [assertion]
      find_module called for: rest_framework.utils.html [assertion]
      find_module called for: rest_framework.utils.humanize_datetime [assertion]
      find_module called for: rest_framework.relations [assertion]
      find_module called for: rest_framework.reverse [assertion]
      find_module called for: rest_framework.utils.urls [assertion]
      find_module called for: django.utils.translation.trans_real [assertion]
      find_module called for: django.utils.translation.gettext [assertion]
      find_module called for: django.utils.translation.os [assertion]
      find_module called for: django.utils.translation.sys [assertion]
      find_module called for: django.utils.translation.warnings [assertion]
      find_module called for: django.utils.translation.collections [assertion]
      find_module called for: django.utils.translation.threading [assertion]
      find_module called for: django.conf.locale [assertion]
      find_module called for: django.conf.locale.__future__ [assertion]
      find_module called for: tests.allauth [assertion]
        pytest_pycollect_makeitem [hook]
            obj: <module '_pytest.assertion.rewrite' from '/Library/Python/2.7/site-packages/_pytest/assertion/rewrite.pyc'>
            collector: <Module 'tests/test_serializers.py'>
            name: @pytest_ar
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <class 'django_accounts.serializers.LoginSerializer'>
            collector: <Module 'tests/test_serializers.py'>
            name: LoginSerializer
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <function get_user_model at 0x1079f3c80>
            collector: <Module 'tests/test_serializers.py'>
            name: get_user_model
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: {'bytearray': <type 'bytearray'>, 'IndexError': <type 'exceptions.IndexError'>, 'all': <built-in function all>, 'help': Type help() for interactive help, or help(object) for help about object., 'vars': <built-in function vars>, 'SyntaxError': <type 'exceptions.SyntaxError'>, 'unicode': <type 'unicode'>, 'UnicodeDecodeError': <type 'exceptions.UnicodeDecodeError'>, 'memoryview': <type 'memoryview'>, 'isinstance': <built-in function isinstance>, 'copyright': Copyright (c) 2001-2015 Python Software Foundation.
All Rights Reserved.

Copyright (c) 2000 BeOpen.com.
All Rights Reserved.

Copyright (c) 1995-2001 Corporation for National Research Initiatives.
All Rights Reserved.

Copyright (c) 1991-1995 Stichting Mathematisch Centrum, Amsterdam.
All Rights Reserved., 'NameError': <type 'exceptions.NameError'>, 'BytesWarning': <type 'exceptions.BytesWarning'>, 'dict': <type 'dict'>, 'input': <built-in function input>, 'oct': <built-in function oct>, 'bin': <built-in function bin>, 'SystemExit': <type 'exceptions.SystemExit'>, 'StandardError': <type 'exceptions.StandardError'>, 'format': <built-in function format>, 'repr': <built-in function repr>, 'sorted': <built-in function sorted>, 'False': False, 'RuntimeWarning': <type 'exceptions.RuntimeWarning'>, 'list': <type 'list'>, 'iter': <built-in function iter>, 'reload': <built-in function reload>, 'Warning': <type 'exceptions.Warning'>, '__package__': None, 'round': <built-in function round>, 'dir': <built-in function dir>, 'cmp': <built-in function cmp>, 'set': <type 'set'>, 'bytes': <type 'str'>, 'reduce': <built-in function reduce>, 'intern': <built-in function intern>, 'issubclass': <built-in function issubclass>, 'Ellipsis': Ellipsis, 'EOFError': <type 'exceptions.EOFError'>, 'locals': <built-in function locals>, 'BufferError': <type 'exceptions.BufferError'>, 'slice': <type 'slice'>, 'FloatingPointError': <type 'exceptions.FloatingPointError'>, 'sum': <built-in function sum>, 'getattr': <built-in function getattr>, 'abs': <built-in function abs>, 'exit': Use exit() or Ctrl-D (i.e. EOF) to exit, 'print': <built-in function print>, 'True': True, 'FutureWarning': <type 'exceptions.FutureWarning'>, 'ImportWarning': <type 'exceptions.ImportWarning'>, 'None': None, 'hash': <built-in function hash>, 'ReferenceError': <type 'exceptions.ReferenceError'>, 'len': <built-in function len>, 'credits':     Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information., 'frozenset': <type 'frozenset'>, '__name__': '__builtin__', 'ord': <built-in function ord>, 'super': <type 'super'>, 'TypeError': <type 'exceptions.TypeError'>, 'license': Type license() to see the full license text, 'KeyboardInterrupt': <type 'exceptions.KeyboardInterrupt'>, 'UserWarning': <type 'exceptions.UserWarning'>, 'filter': <built-in function filter>, 'range': <built-in function range>, 'staticmethod': <type 'staticmethod'>, 'SystemError': <type 'exceptions.SystemError'>, 'BaseException': <type 'exceptions.BaseException'>, 'pow': <built-in function pow>, 'RuntimeError': <type 'exceptions.RuntimeError'>, 'float': <type 'float'>, 'MemoryError': <type 'exceptions.MemoryError'>, 'StopIteration': <type 'exceptions.StopIteration'>, 'globals': <built-in function globals>, 'divmod': <built-in function divmod>, 'enumerate': <type 'enumerate'>, 'apply': <built-in function apply>, 'LookupError': <type 'exceptions.LookupError'>, 'open': <built-in function open>, 'quit': Use quit() or Ctrl-D (i.e. EOF) to exit, 'basestring': <type 'basestring'>, 'UnicodeError': <type 'exceptions.UnicodeError'>, 'zip': <built-in function zip>, 'hex': <built-in function hex>, 'long': <type 'long'>, 'next': <built-in function next>, 'ImportError': <type 'exceptions.ImportError'>, 'chr': <built-in function chr>, 'xrange': <type 'xrange'>, 'type': <type 'type'>, '__doc__': "Built-in functions, exceptions, and other objects.\n\nNoteworthy: None is the `nil' object; Ellipsis represents `...' in slices.", 'Exception': <type 'exceptions.Exception'>, 'tuple': <type 'tuple'>, 'UnicodeTranslateError': <type 'exceptions.UnicodeTranslateError'>, 'reversed': <type 'reversed'>, 'UnicodeEncodeError': <type 'exceptions.UnicodeEncodeError'>, 'IOError': <type 'exceptions.IOError'>, 'hasattr': <built-in function hasattr>, 'delattr': <built-in function delattr>, 'setattr': <built-in function setattr>, 'raw_input': <built-in function raw_input>, 'SyntaxWarning': <type 'exceptions.SyntaxWarning'>, 'compile': <built-in function compile>, 'ArithmeticError': <type 'exceptions.ArithmeticError'>, 'str': <type 'str'>, 'property': <type 'property'>, 'GeneratorExit': <type 'exceptions.GeneratorExit'>, 'int': <type 'int'>, '__import__': <built-in function __import__>, 'KeyError': <type 'exceptions.KeyError'>, 'coerce': <built-in function coerce>, 'PendingDeprecationWarning': <type 'exceptions.PendingDeprecationWarning'>, 'file': <type 'file'>, 'EnvironmentError': <type 'exceptions.EnvironmentError'>, 'unichr': <built-in function unichr>, 'id': <built-in function id>, 'OSError': <type 'exceptions.OSError'>, 'DeprecationWarning': <type 'exceptions.DeprecationWarning'>, 'min': <built-in function min>, 'UnicodeWarning': <type 'exceptions.UnicodeWarning'>, 'execfile': <built-in function execfile>, 'any': <built-in function any>, 'complex': <type 'complex'>, 'bool': <type 'bool'>, 'ValueError': <type 'exceptions.ValueError'>, 'NotImplemented': NotImplemented, 'map': <built-in function map>, 'buffer': <type 'buffer'>, 'max': <built-in function max>, 'object': <type 'object'>, 'TabError': <type 'exceptions.TabError'>, 'callable': <built-in function callable>, 'ZeroDivisionError': <type 'exceptions.ZeroDivisionError'>, 'eval': <built-in function eval>, '__debug__': True, 'IndentationError': <type 'exceptions.IndentationError'>, 'AssertionError': <type 'exceptions.AssertionError'>, 'classmethod': <type 'classmethod'>, 'UnboundLocalError': <type 'exceptions.UnboundLocalError'>, 'NotImplementedError': <type 'exceptions.NotImplementedError'>, 'AttributeError': <type 'exceptions.AttributeError'>, 'OverflowError': <type 'exceptions.OverflowError'>}
            collector: <Module 'tests/test_serializers.py'>
            name: __builtins__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: /Users/danvir/Masterbox/sideprojects/github/django-accounts/tests/test_serializers.py
            collector: <Module 'tests/test_serializers.py'>
            name: __file__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <class 'tests.test_serializers.LoginSerializerTests'>
            collector: <Module 'tests/test_serializers.py'>
            name: LoginSerializerTests
        finish pytest_pycollect_makeitem --> <UnitTestCase 'LoginSerializerTests'> [hook]
        pytest_pycollect_makeitem [hook]
            obj: <_pytest.assertion.rewrite.AssertionRewritingHook object at 0x10683ea10>
            collector: <Module 'tests/test_serializers.py'>
            name: __loader__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <class 'django.test.testcases.TestCase'>
            collector: <Module 'tests/test_serializers.py'>
            name: TestCase
        finish pytest_pycollect_makeitem --> <UnitTestCase 'TestCase'> [hook]
        pytest_pycollect_makeitem [hook]
            obj: <class 'allauth.account.models.EmailAddress'>
            collector: <Module 'tests/test_serializers.py'>
            name: EmailAddress
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: /Users/danvir/Masterbox/sideprojects/github/django-accounts/tests/__pycache__/test_serializers.cpython-27-PYTEST.pyc
            collector: <Module 'tests/test_serializers.py'>
            name: __cached__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: tests.test_serializers
            collector: <Module 'tests/test_serializers.py'>
            name: __name__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: tests
            collector: <Module 'tests/test_serializers.py'>
            name: __package__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <module '__builtin__' (built-in)>
            collector: <Module 'tests/test_serializers.py'>
            name: @py_builtins
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: 
    tests.test_serializers
    ======================

    Test Views for accounts App

    Tests the REST API calls.

    Add more specific serializer/validation tests

    registration is handled by allauth

            collector: <Module 'tests/test_serializers.py'>
            name: __doc__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <slot wrapper '__setattr__' of 'module' objects>
            collector: <Module 'tests/test_serializers.py'>
            name: __setattr__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <built-in method __new__ of type object at 0x1064743b0>
            collector: <Module 'tests/test_serializers.py'>
            name: __new__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <slot wrapper '__getattribute__' of 'module' objects>
            collector: <Module 'tests/test_serializers.py'>
            name: __getattribute__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <slot wrapper '__delattr__' of 'module' objects>
            collector: <Module 'tests/test_serializers.py'>
            name: __delattr__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <slot wrapper '__repr__' of 'module' objects>
            collector: <Module 'tests/test_serializers.py'>
            name: __repr__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <member '__dict__' of 'module' objects>
            collector: <Module 'tests/test_serializers.py'>
            name: __dict__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <slot wrapper '__init__' of 'module' objects>
            collector: <Module 'tests/test_serializers.py'>
            name: __init__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <method '__reduce_ex__' of 'object' objects>
            collector: <Module 'tests/test_serializers.py'>
            name: __reduce_ex__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <method '__reduce__' of 'object' objects>
            collector: <Module 'tests/test_serializers.py'>
            name: __reduce__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <slot wrapper '__str__' of 'object' objects>
            collector: <Module 'tests/test_serializers.py'>
            name: __str__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <method '__format__' of 'object' objects>
            collector: <Module 'tests/test_serializers.py'>
            name: __format__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <attribute '__class__' of 'object' objects>
            collector: <Module 'tests/test_serializers.py'>
            name: __class__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <method '__subclasshook__' of 'object' objects>
            collector: <Module 'tests/test_serializers.py'>
            name: __subclasshook__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <slot wrapper '__hash__' of 'object' objects>
            collector: <Module 'tests/test_serializers.py'>
            name: __hash__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <method '__sizeof__' of 'object' objects>
            collector: <Module 'tests/test_serializers.py'>
            name: __sizeof__
        finish pytest_pycollect_makeitem --> None [hook]
      find_module called for: _pytest._code._pytest [assertion]
      find_module called for: py._std [assertion]
      finish pytest_make_collect_report --> <CollectReport 'tests/test_serializers.py' lenresult=2 outcome='passed'> [hook]
    genitems <UnitTestCase 'TestCase'> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase 'TestCase'>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase 'TestCase'>
      finish pytest_make_collect_report --> <CollectReport 'tests/test_serializers.py::TestCase' lenresult=0 outcome='passed'> [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/test_serializers.py::TestCase' lenresult=0 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <UnitTestCase 'LoginSerializerTests'> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase 'LoginSerializerTests'>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase 'LoginSerializerTests'>
      finish pytest_make_collect_report --> <CollectReport 'tests/test_serializers.py::LoginSerializerTests' lenresult=4 outcome='passed'> [hook]
    genitems <TestCaseFunction 'test_serializer'> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction 'test_serializer'>
      finish pytest_itemcollected --> [] [hook]
    genitems <TestCaseFunction 'test_serializer_incomplete_email'> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction 'test_serializer_incomplete_email'>
      finish pytest_itemcollected --> [] [hook]
    genitems <TestCaseFunction 'test_serializer_invalidate_email'> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction 'test_serializer_invalidate_email'>
      finish pytest_itemcollected --> [] [hook]
    genitems <TestCaseFunction 'test_serializer_username_caps'> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction 'test_serializer_username_caps'>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/test_serializers.py::LoginSerializerTests' lenresult=4 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'tests/test_serializers.py' lenresult=2 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collection_modifyitems [hook]
          items: [<TestCaseFunction 'test_serializer'>, <TestCaseFunction 'test_serializer_incomplete_email'>, <TestCaseFunction 'test_serializer_invalidate_email'>, <TestCaseFunction 'test_serializer_username_caps'>]
          session: <Session 'django-accounts'>
          config: <_pytest.config.Config object at 0x106c7ba10>
      finish pytest_collection_modifyitems --> [] [hook]
      pytest_collection_finish [hook]
          session: <Session 'django-accounts'>
      finish pytest_collection_finish --> [] [hook]
    finish pytest_collection --> [<TestCaseFunction 'test_serializer'>, <TestCaseFunction 'test_serializer_incomplete_email'>, <TestCaseFunction 'test_serializer_invalidate_email'>, <TestCaseFunction 'test_serializer_username_caps'>] [hook]
    pytest_runtestloop [hook]
        session: <Session 'django-accounts'>
      pytest_runtest_protocol [hook]
          item: <TestCaseFunction 'test_serializer'>
          nextitem: <TestCaseFunction 'test_serializer_incomplete_email'>
        pytest_runtest_logstart [hook]
            location: ('tests/test_serializers.py', 65, 'LoginSerializerTests.test_serializer')
            nodeid: tests/test_serializers.py::LoginSerializerTests::test_serializer
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <TestCaseFunction 'test_serializer'>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='_fail_for_invalid_template_variable' scope='session' baseid='' >
              request: <SubRequest '_fail_for_invalid_template_variable' for <TestCaseFunction 'test_serializer'>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='django_test_environment' scope='session' baseid='' >
              request: <SubRequest 'django_test_environment' for <TestCaseFunction 'test_serializer'>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='django_db_blocker' scope='session' baseid='' >
              request: <SubRequest 'django_db_blocker' for <TestCaseFunction 'test_serializer'>>
          finish pytest_fixture_setup --> <pytest_django.plugin._DatabaseBlocker object at 0x107207950> [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='_django_setup_unittest' scope='class' baseid='' >
              request: <SubRequest '_django_setup_unittest' for <TestCaseFunction 'test_serializer'>>
            pytest_fixture_setup [hook]
                fixturedef: <FixtureDef name='django_db_use_migrations' scope='session' baseid='' >
                request: <SubRequest 'django_db_use_migrations' for <TestCaseFunction 'test_serializer'>>
            finish pytest_fixture_setup --> True [hook]
            pytest_fixture_setup [hook]
                fixturedef: <FixtureDef name='django_db_keepdb' scope='session' baseid='' >
                request: <SubRequest 'django_db_keepdb' for <TestCaseFunction 'test_serializer'>>
            finish pytest_fixture_setup --> False [hook]
            pytest_fixture_setup [hook]
                fixturedef: <FixtureDef name='django_db_modify_db_settings_xdist_suffix' scope='session' baseid='' >
                request: <SubRequest 'django_db_modify_db_settings_xdist_suffix' for <TestCaseFunction 'test_serializer'>>
            finish pytest_fixture_setup --> :memory: [hook]
            pytest_fixture_setup [hook]
                fixturedef: <FixtureDef name='django_db_modify_db_settings' scope='session' baseid='' >
                request: <SubRequest 'django_db_modify_db_settings' for <TestCaseFunction 'test_serializer'>>
            finish pytest_fixture_setup --> None [hook]
            pytest_fixture_setup [hook]
                fixturedef: <FixtureDef name='django_db_setup' scope='session' baseid='' >
                request: <SubRequest 'django_db_setup' for <TestCaseFunction 'test_serializer'>>
            find_module called for: django.core.management.commands.migrate [assertion]
            find_module called for: django.core.management.commands.itertools [assertion]
            find_module called for: django.core.management.commands.time [assertion]
            find_module called for: django.core.management.commands.traceback [assertion]
            find_module called for: django.core.management.commands.warnings [assertion]
            find_module called for: django.core.management.commands.collections [assertion]
            find_module called for: django.db.migrations [assertion]
            find_module called for: django.db.migrations.migration [assertion]
            find_module called for: django.db.migrations.__future__ [assertion]
            find_module called for: django.db.migrations.django [assertion]
            find_module called for: django.db.migrations.operations [assertion]
            find_module called for: django.db.migrations.operations.models [assertion]
            find_module called for: django.db.migrations.operations.__future__ [assertion]
            find_module called for: django.db.migrations.operations.django [assertion]
            find_module called for: django.db.migrations.operations.base [assertion]
            find_module called for: django.db.migrations.state [assertion]
            find_module called for: django.db.migrations.copy [assertion]
            find_module called for: django.db.migrations.collections [assertion]
            find_module called for: django.db.migrations.operations.fields [assertion]
            find_module called for: django.db.migrations.operations.special [assertion]
            find_module called for: django.db.migrations.autodetector [assertion]
            find_module called for: django.db.migrations.datetime [assertion]
            find_module called for: django.db.migrations.re [assertion]
            find_module called for: django.db.migrations.itertools [assertion]
            find_module called for: django.db.migrations.optimizer [assertion]
            find_module called for: django.db.migrations.questioner [assertion]
            find_module called for: django.db.migrations.importlib [assertion]
            find_module called for: django.db.migrations.os [assertion]
            find_module called for: django.db.migrations.sys [assertion]
            find_module called for: django.db.migrations.loader [assertion]
            find_module called for: django.db.migrations.graph [assertion]
            find_module called for: django.db.migrations.recorder [assertion]
            find_module called for: django.db.migrations.topological_sort [assertion]
            find_module called for: django.db.migrations.executor [assertion]
            find_module called for: django.contrib.sessions.management [assertion]
            find_module called for: django.contrib.sessions.management [assertion]
            find_module called for: django.contrib.messages.management [assertion]
            find_module called for: django.contrib.staticfiles.management [assertion]
            find_module called for: django.contrib.staticfiles.management [assertion]
            find_module called for: rest_framework.management [assertion]
            find_module called for: rest_framework.authtoken.management [assertion]
            find_module called for: allauth.management [assertion]
            find_module called for: allauth.account.management [assertion]
            find_module called for: allauth.account.management [assertion]
            find_module called for: allauth.socialaccount.management [assertion]
            find_module called for: django_accounts.management [assertion]
            find_module called for: tests.management [assertion]
            find_module called for: django.contrib.auth.migrations [assertion]
            find_module called for: django.contrib.auth.migrations.0004_alter_user_username_opts [assertion]
            find_module called for: django.contrib.auth.migrations.__future__ [assertion]
            find_module called for: django.contrib.auth.migrations.django [assertion]
            find_module called for: django.contrib.auth.migrations.0003_alter_user_email_max_length [assertion]
            find_module called for: django.contrib.auth.migrations.0002_alter_permission_name_max_length [assertion]
            find_module called for: django.contrib.auth.migrations.0006_require_contenttypes_0002 [assertion]
            find_module called for: django.contrib.auth.migrations.0001_initial [assertion]
            find_module called for: django.contrib.auth.migrations.0005_alter_user_last_login_null [assertion]
            find_module called for: django.contrib.contenttypes.migrations [assertion]
            find_module called for: django.contrib.contenttypes.migrations.0001_initial [assertion]
            find_module called for: django.contrib.contenttypes.migrations.__future__ [assertion]
            find_module called for: django.contrib.contenttypes.migrations.django [assertion]
            find_module called for: django.contrib.contenttypes.migrations.0002_remove_content_type_name [assertion]
            find_module called for: django.contrib.sessions.migrations [assertion]
            find_module called for: django.contrib.sessions.migrations.0001_initial [assertion]
            find_module called for: django.contrib.sessions.migrations.__future__ [assertion]
            find_module called for: django.contrib.sessions.migrations.django [assertion]
            find_module called for: django.contrib.messages.migrations [assertion]
            find_module called for: django.contrib.staticfiles.migrations [assertion]
            find_module called for: django.contrib.sites.migrations [assertion]
            find_module called for: django.contrib.sites.migrations.0001_initial [assertion]
            find_module called for: django.contrib.sites.migrations.__future__ [assertion]
            find_module called for: django.contrib.sites.migrations.django [assertion]
            find_module called for: rest_framework.migrations [assertion]
            find_module called for: rest_framework.authtoken.migrations [assertion]
            find_module called for: rest_framework.authtoken.migrations.0002_auto_20160226_1747 [assertion]
            find_module called for: rest_framework.authtoken.migrations.__future__ [assertion]
            find_module called for: rest_framework.authtoken.migrations.django [assertion]
            find_module called for: rest_framework.authtoken.migrations.0001_initial [assertion]
            find_module called for: allauth.migrations [assertion]
            find_module called for: allauth.account.migrations [assertion]
            find_module called for: allauth.account.migrations.django [assertion]
            find_module called for: allauth.account.migrations.0001_initial [assertion]
            find_module called for: allauth.account.migrations.__future__ [assertion]
            find_module called for: allauth.account.migrations.0002_email_max_length [assertion]
            find_module called for: allauth.socialaccount.migrations [assertion]
            find_module called for: allauth.socialaccount.migrations.django [assertion]
            find_module called for: allauth.socialaccount.migrations.0003_extra_data_default_dict [assertion]
            find_module called for: allauth.socialaccount.migrations.__future__ [assertion]
            find_module called for: allauth.socialaccount.migrations.allauth [assertion]
            find_module called for: allauth.socialaccount.migrations.0002_token_max_lengths [assertion]
            find_module called for: allauth.socialaccount.migrations.0001_initial [assertion]
            find_module called for: django_accounts.migrations [assertion]
            find_module called for: tests.migrations [assertion]
            find_module called for: django.db.models.sql.compiler [assertion]
            find_module called for: django.core.management.commands.loaddata [assertion]
            find_module called for: django.core.management.commands.glob [assertion]
            find_module called for: django.core.management.commands.gzip [assertion]
            find_module called for: django.core.management.commands.os [assertion]
            find_module called for: django.core.management.commands.zipfile [assertion]
            find_module called for: django.core.management.commands.bz2 [assertion]
            find_module called for: bz2 [assertion]
            find_module called for: django.core.serializers.xml_serializer [assertion]
            find_module called for: django.core.serializers.xml [assertion]
            find_module called for: xml.dom.pulldom [assertion]
            find_module called for: xml.sax [assertion]
            find_module called for: xml.sax.xmlreader [assertion]
            find_module called for: xml.sax.handler [assertion]
            find_module called for: xml.sax._exceptions [assertion]
            find_module called for: xml.sax.sys [assertion]
            find_module called for: xml.sax.os [assertion]
            find_module called for: xml.dom.types [assertion]
            find_module called for: xml.sax.expatreader [assertion]
            find_module called for: xml.sax.xml [assertion]
            find_module called for: xml.sax.saxutils [assertion]
            find_module called for: xml.sax.urlparse [assertion]
            find_module called for: xml.sax.urllib [assertion]
            find_module called for: xml.sax.types [assertion]
            find_module called for: xml.sax.io [assertion]
            find_module called for: xml.sax._weakref [assertion]
            find_module called for: xml.sax.weakref [assertion]
            find_module called for: django.utils.xmlutils [assertion]
            find_module called for: django.utils.xml [assertion]
            find_module called for: django.core.serializers.pyyaml [assertion]
            find_module called for: django.core.serializers.decimal [assertion]
            find_module called for: django.core.serializers.sys [assertion]
            find_module called for: django.core.serializers.io [assertion]
            find_module called for: django.core.serializers.yaml [assertion]
            find_module called for: yaml [assertion]
            find_module called for: yaml.error [assertion]
            find_module called for: yaml.tokens [assertion]
            find_module called for: yaml.events [assertion]
            find_module called for: yaml.nodes [assertion]
            find_module called for: yaml.loader [assertion]
            find_module called for: yaml.reader [assertion]
            find_module called for: yaml.codecs [assertion]
            find_module called for: yaml.re [assertion]
            find_module called for: yaml.scanner [assertion]
            find_module called for: yaml.parser [assertion]
            find_module called for: yaml.composer [assertion]
            find_module called for: yaml.constructor [assertion]
            find_module called for: yaml.datetime [assertion]
            find_module called for: yaml.binascii [assertion]
            find_module called for: yaml.sys [assertion]
            find_module called for: yaml.types [assertion]
            find_module called for: yaml.resolver [assertion]
            find_module called for: yaml.dumper [assertion]
            find_module called for: yaml.emitter [assertion]
            find_module called for: yaml.serializer [assertion]
            find_module called for: yaml.representer [assertion]
            find_module called for: yaml.copy_reg [assertion]
            find_module called for: yaml.cyaml [assertion]
            find_module called for: yaml._yaml [assertion]
            find_module called for: _yaml [assertion]
            find_module called for: yaml.CSafeLoader [assertion]
            find_module called for: django.contrib.messages.management [assertion]
            find_module called for: rest_framework.management [assertion]
            find_module called for: rest_framework.authtoken.management [assertion]
            find_module called for: allauth.management [assertion]
            find_module called for: allauth.socialaccount.management [assertion]
            find_module called for: django_accounts.management [assertion]
            find_module called for: tests.management [assertion]
            find_module called for: django.contrib.auth.migrations [assertion]
            find_module called for: django.contrib.contenttypes.migrations [assertion]
            find_module called for: django.contrib.sessions.migrations [assertion]
            find_module called for: django.contrib.messages.migrations [assertion]
            find_module called for: django.contrib.staticfiles.migrations [assertion]
            find_module called for: django.contrib.sites.migrations [assertion]
            find_module called for: rest_framework.migrations [assertion]
            find_module called for: rest_framework.authtoken.migrations [assertion]
            find_module called for: allauth.migrations [assertion]
            find_module called for: allauth.account.migrations [assertion]
            find_module called for: allauth.socialaccount.migrations [assertion]
            find_module called for: django_accounts.migrations [assertion]
            find_module called for: tests.migrations [assertion]
            find_module called for: django.db.migrations.writer [assertion]
            find_module called for: django.db.migrations.decimal [assertion]
            find_module called for: django.db.migrations.math [assertion]
            find_module called for: django.db.migrations.types [assertion]
            find_module called for: django.contrib.auth.provider [assertion]
            find_module called for: django.contrib.contenttypes.provider [assertion]
            find_module called for: django.contrib.sessions.provider [assertion]
            find_module called for: django.contrib.messages.provider [assertion]
            find_module called for: django.contrib.staticfiles.provider [assertion]
            find_module called for: django.contrib.sites.provider [assertion]
            find_module called for: rest_framework.provider [assertion]
            find_module called for: rest_framework.authtoken.provider [assertion]
            find_module called for: allauth.provider [assertion]
            find_module called for: allauth.account.provider [assertion]
            find_module called for: allauth.socialaccount.provider [assertion]
            find_module called for: django_accounts.provider [assertion]
            find_module called for: tests.provider [assertion]
            find_module called for: django.contrib.auth.migrations [assertion]
            find_module called for: django.contrib.contenttypes.migrations [assertion]
            find_module called for: django.contrib.sessions.migrations [assertion]
            find_module called for: django.contrib.messages.migrations [assertion]
            find_module called for: django.contrib.staticfiles.migrations [assertion]
            find_module called for: django.contrib.sites.migrations [assertion]
            find_module called for: rest_framework.migrations [assertion]
            find_module called for: rest_framework.authtoken.migrations [assertion]
            find_module called for: allauth.migrations [assertion]
            find_module called for: allauth.account.migrations [assertion]
            find_module called for: allauth.socialaccount.migrations [assertion]
            find_module called for: django_accounts.migrations [assertion]
            find_module called for: tests.migrations [assertion]
            find_module called for: django.core.management.commands.createcachetable [assertion]
            find_module called for: django.core.cache.backends.db [assertion]
            find_module called for: django.core.cache.backends.base64 [assertion]
            find_module called for: django.core.cache.backends.datetime [assertion]
            find_module called for: django.core.cache.backends.locmem [assertion]
            find_module called for: django.core.cache.backends.contextlib [assertion]
            find_module called for: django.utils.synch [assertion]
            finish pytest_fixture_setup --> None [hook]
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='_django_clear_outbox' scope='function' baseid='' >
              request: <SubRequest '_django_clear_outbox' for <TestCaseFunction 'test_serializer'>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='_django_db_marker' scope='function' baseid='' >
              request: <SubRequest '_django_db_marker' for <TestCaseFunction 'test_serializer'>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='_django_set_urlconf' scope='function' baseid='' >
              request: <SubRequest '_django_set_urlconf' for <TestCaseFunction 'test_serializer'>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='_live_server_helper' scope='function' baseid='' >
              request: <SubRequest '_live_server_helper' for <TestCaseFunction 'test_serializer'>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='_template_string_if_invalid_marker' scope='function' baseid='' >
              request: <SubRequest '_template_string_if_invalid_marker' for <TestCaseFunction 'test_serializer'>>
          finish pytest_fixture_setup --> None [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <TestCaseFunction 'test_serializer'>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_serializers.py::LoginSerializerTests::test_serializer' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_serializers.py::LoginSerializerTests::test_serializer' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_serializers.py::LoginSerializerTests::test_serializer' when='setup' outcome='passed'>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <TestCaseFunction 'test_serializer'>
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <TestCaseFunction 'test_serializer'>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_serializers.py::LoginSerializerTests::test_serializer' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_serializers.py::LoginSerializerTests::test_serializer' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_serializers.py::LoginSerializerTests::test_serializer' when='call' outcome='passed'>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <TestCaseFunction 'test_serializer'>
            nextitem: <TestCaseFunction 'test_serializer_incomplete_email'>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='_template_string_if_invalid_marker' scope='function' baseid='' >
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='_live_server_helper' scope='function' baseid='' >
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='_django_set_urlconf' scope='function' baseid='' >
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='_django_db_marker' scope='function' baseid='' >
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='_django_clear_outbox' scope='function' baseid='' >
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <TestCaseFunction 'test_serializer'>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_serializers.py::LoginSerializerTests::test_serializer' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_serializers.py::LoginSerializerTests::test_serializer' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_serializers.py::LoginSerializerTests::test_serializer' when='teardown' outcome='passed'>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <TestCaseFunction 'test_serializer_incomplete_email'>
          nextitem: <TestCaseFunction 'test_serializer_invalidate_email'>
        pytest_runtest_logstart [hook]
            location: ('tests/test_serializers.py', 86, 'LoginSerializerTests.test_serializer_incomplete_email')
            nodeid: tests/test_serializers.py::LoginSerializerTests::test_serializer_incomplete_email
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <TestCaseFunction 'test_serializer_incomplete_email'>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='_django_clear_outbox' scope='function' baseid='' >
              request: <SubRequest '_django_clear_outbox' for <TestCaseFunction 'test_serializer_incomplete_email'>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='_django_db_marker' scope='function' baseid='' >
              request: <SubRequest '_django_db_marker' for <TestCaseFunction 'test_serializer_incomplete_email'>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='_django_set_urlconf' scope='function' baseid='' >
              request: <SubRequest '_django_set_urlconf' for <TestCaseFunction 'test_serializer_incomplete_email'>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='_live_server_helper' scope='function' baseid='' >
              request: <SubRequest '_live_server_helper' for <TestCaseFunction 'test_serializer_incomplete_email'>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='_template_string_if_invalid_marker' scope='function' baseid='' >
              request: <SubRequest '_template_string_if_invalid_marker' for <TestCaseFunction 'test_serializer_incomplete_email'>>
          finish pytest_fixture_setup --> None [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <TestCaseFunction 'test_serializer_incomplete_email'>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_serializers.py::LoginSerializerTests::test_serializer_incomplete_email' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_serializers.py::LoginSerializerTests::test_serializer_incomplete_email' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_serializers.py::LoginSerializerTests::test_serializer_incomplete_email' when='setup' outcome='passed'>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <TestCaseFunction 'test_serializer_incomplete_email'>
        find_module called for: encodings.idna [assertion]
        find_module called for: encodings.stringprep [assertion]
        find_module called for: stringprep [assertion]
        find_module called for: encodings.re [assertion]
        find_module called for: encodings.unicodedata [assertion]
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <TestCaseFunction 'test_serializer_incomplete_email'>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_serializers.py::LoginSerializerTests::test_serializer_incomplete_email' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_serializers.py::LoginSerializerTests::test_serializer_incomplete_email' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_serializers.py::LoginSerializerTests::test_serializer_incomplete_email' when='call' outcome='passed'>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <TestCaseFunction 'test_serializer_incomplete_email'>
            nextitem: <TestCaseFunction 'test_serializer_invalidate_email'>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='_template_string_if_invalid_marker' scope='function' baseid='' >
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='_live_server_helper' scope='function' baseid='' >
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='_django_set_urlconf' scope='function' baseid='' >
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='_django_db_marker' scope='function' baseid='' >
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='_django_clear_outbox' scope='function' baseid='' >
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <TestCaseFunction 'test_serializer_incomplete_email'>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_serializers.py::LoginSerializerTests::test_serializer_incomplete_email' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_serializers.py::LoginSerializerTests::test_serializer_incomplete_email' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_serializers.py::LoginSerializerTests::test_serializer_incomplete_email' when='teardown' outcome='passed'>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <TestCaseFunction 'test_serializer_invalidate_email'>
          nextitem: <TestCaseFunction 'test_serializer_username_caps'>
        pytest_runtest_logstart [hook]
            location: ('tests/test_serializers.py', 76, 'LoginSerializerTests.test_serializer_invalidate_email')
            nodeid: tests/test_serializers.py::LoginSerializerTests::test_serializer_invalidate_email
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <TestCaseFunction 'test_serializer_invalidate_email'>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='_django_clear_outbox' scope='function' baseid='' >
              request: <SubRequest '_django_clear_outbox' for <TestCaseFunction 'test_serializer_invalidate_email'>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='_django_db_marker' scope='function' baseid='' >
              request: <SubRequest '_django_db_marker' for <TestCaseFunction 'test_serializer_invalidate_email'>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='_django_set_urlconf' scope='function' baseid='' >
              request: <SubRequest '_django_set_urlconf' for <TestCaseFunction 'test_serializer_invalidate_email'>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='_live_server_helper' scope='function' baseid='' >
              request: <SubRequest '_live_server_helper' for <TestCaseFunction 'test_serializer_invalidate_email'>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='_template_string_if_invalid_marker' scope='function' baseid='' >
              request: <SubRequest '_template_string_if_invalid_marker' for <TestCaseFunction 'test_serializer_invalidate_email'>>
          finish pytest_fixture_setup --> None [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <TestCaseFunction 'test_serializer_invalidate_email'>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_serializers.py::LoginSerializerTests::test_serializer_invalidate_email' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_serializers.py::LoginSerializerTests::test_serializer_invalidate_email' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_serializers.py::LoginSerializerTests::test_serializer_invalidate_email' when='setup' outcome='passed'>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <TestCaseFunction 'test_serializer_invalidate_email'>
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <TestCaseFunction 'test_serializer_invalidate_email'>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_serializers.py::LoginSerializerTests::test_serializer_invalidate_email' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_serializers.py::LoginSerializerTests::test_serializer_invalidate_email' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_serializers.py::LoginSerializerTests::test_serializer_invalidate_email' when='call' outcome='passed'>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <TestCaseFunction 'test_serializer_invalidate_email'>
            nextitem: <TestCaseFunction 'test_serializer_username_caps'>
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='_template_string_if_invalid_marker' scope='function' baseid='' >
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='_live_server_helper' scope='function' baseid='' >
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='_django_set_urlconf' scope='function' baseid='' >
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='_django_db_marker' scope='function' baseid='' >
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='_django_clear_outbox' scope='function' baseid='' >
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <TestCaseFunction 'test_serializer_invalidate_email'>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_serializers.py::LoginSerializerTests::test_serializer_invalidate_email' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_serializers.py::LoginSerializerTests::test_serializer_invalidate_email' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_serializers.py::LoginSerializerTests::test_serializer_invalidate_email' when='teardown' outcome='passed'>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <TestCaseFunction 'test_serializer_username_caps'>
          nextitem: None
        pytest_runtest_logstart [hook]
            location: ('tests/test_serializers.py', 96, 'LoginSerializerTests.test_serializer_username_caps')
            nodeid: tests/test_serializers.py::LoginSerializerTests::test_serializer_username_caps
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <TestCaseFunction 'test_serializer_username_caps'>
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='_django_clear_outbox' scope='function' baseid='' >
              request: <SubRequest '_django_clear_outbox' for <TestCaseFunction 'test_serializer_username_caps'>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='_django_db_marker' scope='function' baseid='' >
              request: <SubRequest '_django_db_marker' for <TestCaseFunction 'test_serializer_username_caps'>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='_django_set_urlconf' scope='function' baseid='' >
              request: <SubRequest '_django_set_urlconf' for <TestCaseFunction 'test_serializer_username_caps'>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='_live_server_helper' scope='function' baseid='' >
              request: <SubRequest '_live_server_helper' for <TestCaseFunction 'test_serializer_username_caps'>>
          finish pytest_fixture_setup --> None [hook]
          pytest_fixture_setup [hook]
              fixturedef: <FixtureDef name='_template_string_if_invalid_marker' scope='function' baseid='' >
              request: <SubRequest '_template_string_if_invalid_marker' for <TestCaseFunction 'test_serializer_username_caps'>>
          finish pytest_fixture_setup --> None [hook]
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <TestCaseFunction 'test_serializer_username_caps'>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_serializers.py::LoginSerializerTests::test_serializer_username_caps' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_serializers.py::LoginSerializerTests::test_serializer_username_caps' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_serializers.py::LoginSerializerTests::test_serializer_username_caps' when='setup' outcome='passed'>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <TestCaseFunction 'test_serializer_username_caps'>
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <TestCaseFunction 'test_serializer_username_caps'>
            call: <CallInfo when='call' result: []>
        find_module called for: _pytest._code.ast [assertion]
        find_module called for: py._io.saferepr [assertion]
        finish pytest_runtest_makereport --> <TestReport 'tests/test_serializers.py::LoginSerializerTests::test_serializer_username_caps' when='call' outcome='failed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_serializers.py::LoginSerializerTests::test_serializer_username_caps' when='call' outcome='failed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_serializers.py::LoginSerializerTests::test_serializer_username_caps' when='call' outcome='failed'>
          finish pytest_report_teststatus --> ('failed', 'F', 'FAILED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_exception_interact [hook]
            report: <TestReport 'tests/test_serializers.py::LoginSerializerTests::test_serializer_username_caps' when='call' outcome='failed'>
            node: <TestCaseFunction 'test_serializer_username_caps'>
            call: <CallInfo when='call' exception: UNIQUE constraint failed: django_accounts_accountsuser.username>
        finish pytest_exception_interact --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <TestCaseFunction 'test_serializer_username_caps'>
            nextitem: None
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='_template_string_if_invalid_marker' scope='function' baseid='' >
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='_live_server_helper' scope='function' baseid='' >
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='_django_set_urlconf' scope='function' baseid='' >
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='_django_db_marker' scope='function' baseid='' >
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='_django_clear_outbox' scope='function' baseid='' >
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='_django_setup_unittest' scope='class' baseid='' >
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='_django_setup_unittest' scope='class' baseid='' >
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='_django_setup_unittest' scope='class' baseid='' >
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='_django_setup_unittest' scope='class' baseid='' >
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='_django_setup_unittest' scope='class' baseid='' >
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='_django_setup_unittest' scope='class' baseid='' >
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='_django_setup_unittest' scope='class' baseid='' >
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='django_db_setup' scope='session' baseid='' >
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='_django_setup_unittest' scope='class' baseid='' >
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='django_db_blocker' scope='session' baseid='' >
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='django_db_setup' scope='session' baseid='' >
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='django_test_environment' scope='session' baseid='' >
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='_fail_for_invalid_template_variable' scope='session' baseid='' >
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='django_db_blocker' scope='session' baseid='' >
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='django_test_environment' scope='session' baseid='' >
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='_fail_for_invalid_template_variable' scope='session' baseid='' >
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='django_db_blocker' scope='session' baseid='' >
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='django_test_environment' scope='session' baseid='' >
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='_fail_for_invalid_template_variable' scope='session' baseid='' >
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='django_db_setup' scope='session' baseid='' >
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='django_db_setup' scope='session' baseid='' >
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='django_db_modify_db_settings' scope='session' baseid='' >
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='django_db_modify_db_settings' scope='session' baseid='' >
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='django_db_modify_db_settings_xdist_suffix' scope='session' baseid='' >
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='django_db_setup' scope='session' baseid='' >
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='django_db_keepdb' scope='session' baseid='' >
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='django_db_setup' scope='session' baseid='' >
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='django_db_use_migrations' scope='session' baseid='' >
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='django_db_blocker' scope='session' baseid='' >
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='django_test_environment' scope='session' baseid='' >
          finish pytest_fixture_post_finalizer --> [] [hook]
          pytest_fixture_post_finalizer [hook]
              fixturedef: <FixtureDef name='_fail_for_invalid_template_variable' scope='session' baseid='' >
          finish pytest_fixture_post_finalizer --> [] [hook]
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <TestCaseFunction 'test_serializer_username_caps'>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'tests/test_serializers.py::LoginSerializerTests::test_serializer_username_caps' when='teardown' outcome='failed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'tests/test_serializers.py::LoginSerializerTests::test_serializer_username_caps' when='teardown' outcome='failed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'tests/test_serializers.py::LoginSerializerTests::test_serializer_username_caps' when='teardown' outcome='failed'>
          finish pytest_report_teststatus --> ('error', 'E', 'ERROR') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_exception_interact [hook]
            report: <TestReport 'tests/test_serializers.py::LoginSerializerTests::test_serializer_username_caps' when='teardown' outcome='failed'>
            node: <TestCaseFunction 'test_serializer_username_caps'>
            call: <CallInfo when='teardown' exception: An error occurred in the current transaction. You can't execute queries until the end of the 'atomic' block.>
        finish pytest_exception_interact --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
    finish pytest_runtestloop --> True [hook]
    pytest_sessionfinish [hook]
        session: <Session 'django-accounts'>
        exitstatus: 1
    cache-write cache/lastfailed: {'tests/test_serializers.py::LoginSerializerTests::test_serializer_username_caps': True} [cache]
      pytest_terminal_summary [hook]
          exitstatus: 1
          terminalreporter: <_pytest.terminal.TerminalReporter instance at 0x1072e6878>
      finish pytest_terminal_summary --> [] [hook]
    finish pytest_sessionfinish --> [] [hook]
    pytest_unconfigure [hook]
        config: <_pytest.config.Config object at 0x106c7ba10>
    finish pytest_unconfigure --> [] [hook]
  finish [config:tmpdir]
